//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Import.AmurServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddrRegionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OrgIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddrRegionId {
            get {
                return this.AddrRegionIdField;
            }
            set {
                if ((this.AddrRegionIdField.Equals(value) != true)) {
                    this.AddrRegionIdField = value;
                    this.RaisePropertyChanged("AddrRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OrgId {
            get {
                return this.OrgIdField;
            }
            set {
                if ((this.OrgIdField.Equals(value) != true)) {
                    this.OrgIdField = value;
                    this.RaisePropertyChanged("OrgId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Method", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class Method : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.MethodForecast MethodForecastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> MethodOutputStoreParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SourceLegalEntityIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.MethodForecast MethodForecast {
            get {
                return this.MethodForecastField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodForecastField, value) != true)) {
                    this.MethodForecastField = value;
                    this.RaisePropertyChanged("MethodForecast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> MethodOutputStoreParameters {
            get {
                return this.MethodOutputStoreParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodOutputStoreParametersField, value) != true)) {
                    this.MethodOutputStoreParametersField = value;
                    this.RaisePropertyChanged("MethodOutputStoreParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SourceLegalEntityId {
            get {
                return this.SourceLegalEntityIdField;
            }
            set {
                if ((this.SourceLegalEntityIdField.Equals(value) != true)) {
                    this.SourceLegalEntityIdField = value;
                    this.RaisePropertyChanged("SourceLegalEntityId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MethodForecast", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class MethodForecast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] DateIniHoursUTCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeadTimeUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] LeadTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.Method MethodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] DateIniHoursUTC {
            get {
                return this.DateIniHoursUTCField;
            }
            set {
                if ((object.ReferenceEquals(this.DateIniHoursUTCField, value) != true)) {
                    this.DateIniHoursUTCField = value;
                    this.RaisePropertyChanged("DateIniHoursUTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeadTimeUnitId {
            get {
                return this.LeadTimeUnitIdField;
            }
            set {
                if ((this.LeadTimeUnitIdField.Equals(value) != true)) {
                    this.LeadTimeUnitIdField = value;
                    this.RaisePropertyChanged("LeadTimeUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] LeadTimes {
            get {
                return this.LeadTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.LeadTimesField, value) != true)) {
                    this.LeadTimesField = value;
                    this.RaisePropertyChanged("LeadTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.Method Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoPoint", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Geo")]
    [System.SerializableAttribute()]
    public partial class GeoPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatGrdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LonGrdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatGrd {
            get {
                return this.LatGrdField;
            }
            set {
                if ((this.LatGrdField.Equals(value) != true)) {
                    this.LatGrdField = value;
                    this.RaisePropertyChanged("LatGrd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LonGrd {
            get {
                return this.LonGrdField;
            }
            set {
                if ((this.LonGrdField.Equals(value) != true)) {
                    this.LonGrdField = value;
                    this.RaisePropertyChanged("LonGrd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoObject", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class GeoObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FallIntoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeoTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[][] Shape2DField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FallIntoId {
            get {
                return this.FallIntoIdField;
            }
            set {
                if ((this.FallIntoIdField.Equals(value) != true)) {
                    this.FallIntoIdField = value;
                    this.RaisePropertyChanged("FallIntoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GeoTypeId {
            get {
                return this.GeoTypeIdField;
            }
            set {
                if ((this.GeoTypeIdField.Equals(value) != true)) {
                    this.GeoTypeIdField = value;
                    this.RaisePropertyChanged("GeoTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Order {
            get {
                return this.OrderField;
            }
            set {
                if ((this.OrderField.Equals(value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] Shape2D {
            get {
                return this.Shape2DField;
            }
            set {
                if ((object.ReferenceEquals(this.Shape2DField, value) != true)) {
                    this.Shape2DField = value;
                    this.RaisePropertyChanged("Shape2D");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteAttrType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class SiteAttrType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MandatorySiteTypeIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MandatorySiteTypeIds {
            get {
                return this.MandatorySiteTypeIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.MandatorySiteTypeIdsField, value) != true)) {
                    this.MandatorySiteTypeIdsField = value;
                    this.RaisePropertyChanged("MandatorySiteTypeIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Site", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class Site : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteTypeId {
            get {
                return this.SiteTypeIdField;
            }
            set {
                if ((this.SiteTypeIdField.Equals(value) != true)) {
                    this.SiteTypeIdField = value;
                    this.RaisePropertyChanged("SiteTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationId {
            get {
                return this.StationIdField;
            }
            set {
                if ((this.StationIdField.Equals(value) != true)) {
                    this.StationIdField = value;
                    this.RaisePropertyChanged("StationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SampleMedium", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class SampleMedium : Import.AmurServiceReference.DicItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DicItem", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeneralCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.ValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SampleMedium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Org))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Org[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Person[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Addr[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Addr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.LegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.IdNames))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.LegalEntity[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersXSites[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersXSites))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersParams[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Coef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Coef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Point[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Point))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataForecast[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataForecast))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.AQCDataValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.AQCDataValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DicItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Type))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MemberInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoPoint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoObject>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[][]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<short, string[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DateTime[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.Curve[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.DataForecast[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(long[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, Import.AmurServiceReference.DataSource>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<Import.AmurServiceReference.Catalog, Import.AmurServiceReference.DataValue[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Station[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Station))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Method))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MethodForecast))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteAttrType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteAttrType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Site[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Site))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SampleMedium[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.EntityAttrValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.EntityAttrValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.StationType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.StationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Variable[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Variable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeneralCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MeteoZone[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MeteoZone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Method[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MethodForecast[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.OffsetType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.OffsetType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSite[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSiteType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSiteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Unit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Unit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.ValueType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableCode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Catalog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Catalog[]))]
    public partial class DicItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.DicItem[] ChildsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object EntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.DicItem ParentDicItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.Type TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.DicItem[] Childs {
            get {
                return this.ChildsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildsField, value) != true)) {
                    this.ChildsField = value;
                    this.RaisePropertyChanged("Childs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameShort {
            get {
                return this.NameShortField;
            }
            set {
                if ((object.ReferenceEquals(this.NameShortField, value) != true)) {
                    this.NameShortField = value;
                    this.RaisePropertyChanged("NameShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.DicItem ParentDicItem {
            get {
                return this.ParentDicItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentDicItemField, value) != true)) {
                    this.ParentDicItemField = value;
                    this.RaisePropertyChanged("ParentDicItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.Type Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Type", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.SerializableAttribute()]
    public partial class Type : Import.AmurServiceReference.MemberInfo {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class DataType : Import.AmurServiceReference.DicItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralCategory", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class GeneralCategory : Import.AmurServiceReference.DicItem {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class ValueType : Import.AmurServiceReference.DicItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariableType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class VariableType : Import.AmurServiceReference.DicItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Org", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Social")]
    [System.SerializableAttribute()]
    public partial class Org : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegalEntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StaffIdFirstFaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalEntityId {
            get {
                return this.LegalEntityIdField;
            }
            set {
                if ((this.LegalEntityIdField.Equals(value) != true)) {
                    this.LegalEntityIdField = value;
                    this.RaisePropertyChanged("LegalEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> StaffIdFirstFace {
            get {
                return this.StaffIdFirstFaceField;
            }
            set {
                if ((this.StaffIdFirstFaceField.Equals(value) != true)) {
                    this.StaffIdFirstFaceField = value;
                    this.RaisePropertyChanged("StaffIdFirstFace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Social")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LegalEntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<char> SexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalEntityId {
            get {
                return this.LegalEntityIdField;
            }
            set {
                if ((this.LegalEntityIdField.Equals(value) != true)) {
                    this.LegalEntityIdField = value;
                    this.RaisePropertyChanged("LegalEntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<char> Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Addr", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Social")]
    [System.SerializableAttribute()]
    public partial class Addr : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.Addr[] ChildsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.Addr[] Childs {
            get {
                return this.ChildsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildsField, value) != true)) {
                    this.ChildsField = value;
                    this.RaisePropertyChanged("Childs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameShort {
            get {
                return this.NameShortField;
            }
            set {
                if ((object.ReferenceEquals(this.NameShortField, value) != true)) {
                    this.NameShortField = value;
                    this.RaisePropertyChanged("NameShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalEntity", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Social")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Org))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Org[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Person))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Person[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Addr[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Addr))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.IdNames))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.LegalEntity[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysObj))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersXSites[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersXSites))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersParams[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SysParsersParams))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Coef[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Coef))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Point[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Curve.Seria.Point))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataForecast[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataForecast))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataSource))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.AQCDataValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.AQCDataValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoPoint))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DicItem))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DicItem[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Type))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MemberInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(int[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoPoint>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoObject>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(double[][]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<short, string[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DateTime[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.Curve[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.DataForecast[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(long[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, Import.AmurServiceReference.DataSource>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<Import.AmurServiceReference.Catalog, Import.AmurServiceReference.DataValue[]>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Station[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Station))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Method))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MethodForecast))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteAttrType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteAttrType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Site[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Site))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SampleMedium[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SampleMedium))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.EntityAttrValue[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.EntityAttrValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.StationType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.StationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Variable[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Variable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.DataType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeneralCategory[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeneralCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoObject[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.GeoType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MeteoZone[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MeteoZone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Method[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.MethodForecast[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.OffsetType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.OffsetType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSite[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSite))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSiteType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.SiteXSiteType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Unit[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Unit))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.ValueType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.ValueType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableCode[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableCode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.VariableType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Catalog))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Catalog[]))]
    public partial class LegalEntity : Import.AmurServiceReference.IdNames {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddrAddField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AddrIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object EntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhonesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddrAdd {
            get {
                return this.AddrAddField;
            }
            set {
                if ((object.ReferenceEquals(this.AddrAddField, value) != true)) {
                    this.AddrAddField = value;
                    this.RaisePropertyChanged("AddrAdd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AddrId {
            get {
                return this.AddrIdField;
            }
            set {
                if ((this.AddrIdField.Equals(value) != true)) {
                    this.AddrIdField = value;
                    this.RaisePropertyChanged("AddrId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Entity {
            get {
                return this.EntityField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityField, value) != true)) {
                    this.EntityField = value;
                    this.RaisePropertyChanged("Entity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phones {
            get {
                return this.PhonesField;
            }
            set {
                if ((object.ReferenceEquals(this.PhonesField, value) != true)) {
                    this.PhonesField = value;
                    this.RaisePropertyChanged("Phones");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSite {
            get {
                return this.WebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteField, value) != true)) {
                    this.WebSiteField = value;
                    this.RaisePropertyChanged("WebSite");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdNames", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Social")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.LegalEntity))]
    public partial class IdNames : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameRusShortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEngShort {
            get {
                return this.NameEngShortField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngShortField, value) != true)) {
                    this.NameEngShortField = value;
                    this.RaisePropertyChanged("NameEngShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRus {
            get {
                return this.NameRusField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRusField, value) != true)) {
                    this.NameRusField = value;
                    this.RaisePropertyChanged("NameRus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameRusShort {
            get {
                return this.NameRusShortField;
            }
            set {
                if ((object.ReferenceEquals(this.NameRusShortField, value) != true)) {
                    this.NameRusShortField = value;
                    this.RaisePropertyChanged("NameRusShort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysObj", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Parser")]
    [System.SerializableAttribute()]
    public partial class SysObj : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HeapField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastStartParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysObjTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Heap {
            get {
                return this.HeapField;
            }
            set {
                if ((object.ReferenceEquals(this.HeapField, value) != true)) {
                    this.HeapField = value;
                    this.RaisePropertyChanged("Heap");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastStartParam {
            get {
                return this.LastStartParamField;
            }
            set {
                if ((object.ReferenceEquals(this.LastStartParamField, value) != true)) {
                    this.LastStartParamField = value;
                    this.RaisePropertyChanged("LastStartParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysObjTypeId {
            get {
                return this.SysObjTypeIdField;
            }
            set {
                if ((this.SysObjTypeIdField.Equals(value) != true)) {
                    this.SysObjTypeIdField = value;
                    this.RaisePropertyChanged("SysObjTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysParsersXSites", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Parser")]
    [System.SerializableAttribute()]
    public partial class SysParsersXSites : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtSiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysObjIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysParsersParamsSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActualField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtSiteId {
            get {
                return this.ExtSiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtSiteIdField, value) != true)) {
                    this.ExtSiteIdField = value;
                    this.RaisePropertyChanged("ExtSiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteTypeId {
            get {
                return this.SiteTypeIdField;
            }
            set {
                if ((this.SiteTypeIdField.Equals(value) != true)) {
                    this.SiteTypeIdField = value;
                    this.RaisePropertyChanged("SiteTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysObjId {
            get {
                return this.SysObjIdField;
            }
            set {
                if ((this.SysObjIdField.Equals(value) != true)) {
                    this.SysObjIdField = value;
                    this.RaisePropertyChanged("SysObjId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysParsersParamsSetId {
            get {
                return this.SysParsersParamsSetIdField;
            }
            set {
                if ((this.SysParsersParamsSetIdField.Equals(value) != true)) {
                    this.SysParsersParamsSetIdField = value;
                    this.RaisePropertyChanged("SysParsersParamsSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActual {
            get {
                return this.isActualField;
            }
            set {
                if ((this.isActualField.Equals(value) != true)) {
                    this.isActualField = value;
                    this.RaisePropertyChanged("isActual");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysParsersParams", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Parser")]
    [System.SerializableAttribute()]
    public partial class SysParsersParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtLevelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntOffsetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntVariableIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MultiplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OffsetDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OffsetUnitsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysParsersParamsSetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VarErrorDataValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VarNoDataValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VariableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeFormId {
            get {
                return this.CodeFormIdField;
            }
            set {
                if ((this.CodeFormIdField.Equals(value) != true)) {
                    this.CodeFormIdField = value;
                    this.RaisePropertyChanged("CodeFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtLevelId {
            get {
                return this.ExtLevelIdField;
            }
            set {
                if ((this.ExtLevelIdField.Equals(value) != true)) {
                    this.ExtLevelIdField = value;
                    this.RaisePropertyChanged("ExtLevelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtParam {
            get {
                return this.ExtParamField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtParamField, value) != true)) {
                    this.ExtParamField = value;
                    this.RaisePropertyChanged("ExtParam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntOffsetId {
            get {
                return this.IntOffsetIdField;
            }
            set {
                if ((this.IntOffsetIdField.Equals(value) != true)) {
                    this.IntOffsetIdField = value;
                    this.RaisePropertyChanged("IntOffsetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IntVariableId {
            get {
                return this.IntVariableIdField;
            }
            set {
                if ((this.IntVariableIdField.Equals(value) != true)) {
                    this.IntVariableIdField = value;
                    this.RaisePropertyChanged("IntVariableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiplier {
            get {
                return this.MultiplierField;
            }
            set {
                if ((this.MultiplierField.Equals(value) != true)) {
                    this.MultiplierField = value;
                    this.RaisePropertyChanged("Multiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OffsetDescription {
            get {
                return this.OffsetDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.OffsetDescriptionField, value) != true)) {
                    this.OffsetDescriptionField = value;
                    this.RaisePropertyChanged("OffsetDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OffsetUnitsId {
            get {
                return this.OffsetUnitsIdField;
            }
            set {
                if ((this.OffsetUnitsIdField.Equals(value) != true)) {
                    this.OffsetUnitsIdField = value;
                    this.RaisePropertyChanged("OffsetUnitsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysParsersParamsSetId {
            get {
                return this.SysParsersParamsSetIdField;
            }
            set {
                if ((this.SysParsersParamsSetIdField.Equals(value) != true)) {
                    this.SysParsersParamsSetIdField = value;
                    this.RaisePropertyChanged("SysParsersParamsSetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VarErrorDataValue {
            get {
                return this.VarErrorDataValueField;
            }
            set {
                if ((this.VarErrorDataValueField.Equals(value) != true)) {
                    this.VarErrorDataValueField = value;
                    this.RaisePropertyChanged("VarErrorDataValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VarNoDataValue {
            get {
                return this.VarNoDataValueField;
            }
            set {
                if ((this.VarNoDataValueField.Equals(value) != true)) {
                    this.VarNoDataValueField = value;
                    this.RaisePropertyChanged("VarNoDataValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VariableName {
            get {
                return this.VariableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VariableNameField, value) != true)) {
                    this.VariableNameField = value;
                    this.RaisePropertyChanged("VariableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Curve", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
    [System.SerializableAttribute()]
    public partial class Curve : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatalogIdXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatalogIdYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Import.AmurServiceReference.Curve.Seria[] SeriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogIdX {
            get {
                return this.CatalogIdXField;
            }
            set {
                if ((this.CatalogIdXField.Equals(value) != true)) {
                    this.CatalogIdXField = value;
                    this.RaisePropertyChanged("CatalogIdX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogIdY {
            get {
                return this.CatalogIdYField;
            }
            set {
                if ((this.CatalogIdYField.Equals(value) != true)) {
                    this.CatalogIdYField = value;
                    this.RaisePropertyChanged("CatalogIdY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Import.AmurServiceReference.Curve.Seria[] Series {
            get {
                return this.SeriesField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesField, value) != true)) {
                    this.SeriesField = value;
                    this.RaisePropertyChanged("Series");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Curve.Seria", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
        [System.SerializableAttribute()]
        public partial class Seria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private Import.AmurServiceReference.Curve.Seria.Coef[] CoefsField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int CurveIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.DateTime DateSField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string DescriptionField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int IdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private Import.AmurServiceReference.Curve.Seria.Point[] PointsField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public Import.AmurServiceReference.Curve.Seria.Coef[] Coefs {
                get {
                    return this.CoefsField;
                }
                set {
                    if ((object.ReferenceEquals(this.CoefsField, value) != true)) {
                        this.CoefsField = value;
                        this.RaisePropertyChanged("Coefs");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int CurveId {
                get {
                    return this.CurveIdField;
                }
                set {
                    if ((this.CurveIdField.Equals(value) != true)) {
                        this.CurveIdField = value;
                        this.RaisePropertyChanged("CurveId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.DateTime DateS {
                get {
                    return this.DateSField;
                }
                set {
                    if ((this.DateSField.Equals(value) != true)) {
                        this.DateSField = value;
                        this.RaisePropertyChanged("DateS");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Description {
                get {
                    return this.DescriptionField;
                }
                set {
                    if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                        this.DescriptionField = value;
                        this.RaisePropertyChanged("Description");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((this.IdField.Equals(value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public Import.AmurServiceReference.Curve.Seria.Point[] Points {
                get {
                    return this.PointsField;
                }
                set {
                    if ((object.ReferenceEquals(this.PointsField, value) != true)) {
                        this.PointsField = value;
                        this.RaisePropertyChanged("Points");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="Curve.Seria.Coef", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
            [System.SerializableAttribute()]
            public partial class Coef : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private int DayField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private int MonthField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private double ValueField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public int Day {
                    get {
                        return this.DayField;
                    }
                    set {
                        if ((this.DayField.Equals(value) != true)) {
                            this.DayField = value;
                            this.RaisePropertyChanged("Day");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public int Month {
                    get {
                        return this.MonthField;
                    }
                    set {
                        if ((this.MonthField.Equals(value) != true)) {
                            this.MonthField = value;
                            this.RaisePropertyChanged("Month");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public double Value {
                    get {
                        return this.ValueField;
                    }
                    set {
                        if ((this.ValueField.Equals(value) != true)) {
                            this.ValueField = value;
                            this.RaisePropertyChanged("Value");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
            
            [System.Diagnostics.DebuggerStepThroughAttribute()]
            [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
            [System.Runtime.Serialization.DataContractAttribute(Name="Curve.Seria.Point", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
            [System.SerializableAttribute()]
            public partial class Point : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
                
                [System.NonSerializedAttribute()]
                private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private double XField;
                
                [System.Runtime.Serialization.OptionalFieldAttribute()]
                private double YField;
                
                public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                    get {
                        return this.extensionDataField;
                    }
                    set {
                        this.extensionDataField = value;
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public double X {
                    get {
                        return this.XField;
                    }
                    set {
                        if ((this.XField.Equals(value) != true)) {
                            this.XField = value;
                            this.RaisePropertyChanged("X");
                        }
                    }
                }
                
                [System.Runtime.Serialization.DataMemberAttribute()]
                public double Y {
                    get {
                        return this.YField;
                    }
                    set {
                        if ((this.YField.Equals(value) != true)) {
                            this.YField = value;
                            this.RaisePropertyChanged("Y");
                        }
                    }
                }
                
                public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
                
                protected void RaisePropertyChanged(string propertyName) {
                    System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                    if ((propertyChanged != null)) {
                        propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                    }
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataForecast", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
    [System.SerializableAttribute()]
    public partial class DataForecast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFcsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateIniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateInsertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LagFcsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((this.CatalogIdField.Equals(value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFcs {
            get {
                return this.DateFcsField;
            }
            set {
                if ((this.DateFcsField.Equals(value) != true)) {
                    this.DateFcsField = value;
                    this.RaisePropertyChanged("DateFcs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateIni {
            get {
                return this.DateIniField;
            }
            set {
                if ((this.DateIniField.Equals(value) != true)) {
                    this.DateIniField = value;
                    this.RaisePropertyChanged("DateIni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateInsert {
            get {
                return this.DateInsertField;
            }
            set {
                if ((this.DateInsertField.Equals(value) != true)) {
                    this.DateInsertField = value;
                    this.RaisePropertyChanged("DateInsert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LagFcs {
            get {
                return this.LagFcsField;
            }
            set {
                if ((this.LagFcsField.Equals(value) != true)) {
                    this.LagFcsField = value;
                    this.RaisePropertyChanged("LagFcs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataSource", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
    [System.SerializableAttribute()]
    public partial class DataSource : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeFormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLOCInsertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUTCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUTCRecieveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CodeFormId {
            get {
                return this.CodeFormIdField;
            }
            set {
                if ((this.CodeFormIdField.Equals(value) != true)) {
                    this.CodeFormIdField = value;
                    this.RaisePropertyChanged("CodeFormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLOCInsert {
            get {
                return this.DateLOCInsertField;
            }
            set {
                if ((this.DateLOCInsertField.Equals(value) != true)) {
                    this.DateLOCInsertField = value;
                    this.RaisePropertyChanged("DateLOCInsert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUTC {
            get {
                return this.DateUTCField;
            }
            set {
                if ((this.DateUTCField.Equals(value) != true)) {
                    this.DateUTCField = value;
                    this.RaisePropertyChanged("DateUTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUTCRecieve {
            get {
                return this.DateUTCRecieveField;
            }
            set {
                if ((this.DateUTCRecieveField.Equals(value) != true)) {
                    this.DateUTCRecieveField = value;
                    this.RaisePropertyChanged("DateUTCRecieve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataValue", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Data")]
    [System.SerializableAttribute()]
    public partial class DataValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateLOCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateUTCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte FlagAQCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UTCOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((this.CatalogIdField.Equals(value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateLOC {
            get {
                return this.DateLOCField;
            }
            set {
                if ((this.DateLOCField.Equals(value) != true)) {
                    this.DateLOCField = value;
                    this.RaisePropertyChanged("DateLOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateUTC {
            get {
                return this.DateUTCField;
            }
            set {
                if ((this.DateUTCField.Equals(value) != true)) {
                    this.DateUTCField = value;
                    this.RaisePropertyChanged("DateUTC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte FlagAQC {
            get {
                return this.FlagAQCField;
            }
            set {
                if ((this.FlagAQCField.Equals(value) != true)) {
                    this.FlagAQCField = value;
                    this.RaisePropertyChanged("FlagAQC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float UTCOffset {
            get {
                return this.UTCOffsetField;
            }
            set {
                if ((this.UTCOffsetField.Equals(value) != true)) {
                    this.UTCOffsetField = value;
                    this.RaisePropertyChanged("UTCOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AQCDataValue", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.DataP")]
    [System.SerializableAttribute()]
    public partial class AQCDataValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AQCRoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DataValueIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAQCAppliedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AQCRoleId {
            get {
                return this.AQCRoleIdField;
            }
            set {
                if ((this.AQCRoleIdField.Equals(value) != true)) {
                    this.AQCRoleIdField = value;
                    this.RaisePropertyChanged("AQCRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DataValueId {
            get {
                return this.DataValueIdField;
            }
            set {
                if ((this.DataValueIdField.Equals(value) != true)) {
                    this.DataValueIdField = value;
                    this.RaisePropertyChanged("DataValueId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAQCApplied {
            get {
                return this.IsAQCAppliedField;
            }
            set {
                if ((this.IsAQCAppliedField.Equals(value) != true)) {
                    this.IsAQCAppliedField = value;
                    this.RaisePropertyChanged("IsAQCApplied");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemberInfo", Namespace="http://schemas.datacontract.org/2004/07/System.Reflection")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Import.AmurServiceReference.Type))]
    public partial class MemberInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Catalog", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class Catalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MethodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OffsetTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OffsetValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariableIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MethodId {
            get {
                return this.MethodIdField;
            }
            set {
                if ((this.MethodIdField.Equals(value) != true)) {
                    this.MethodIdField = value;
                    this.RaisePropertyChanged("MethodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OffsetTypeId {
            get {
                return this.OffsetTypeIdField;
            }
            set {
                if ((this.OffsetTypeIdField.Equals(value) != true)) {
                    this.OffsetTypeIdField = value;
                    this.RaisePropertyChanged("OffsetTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OffsetValue {
            get {
                return this.OffsetValueField;
            }
            set {
                if ((this.OffsetValueField.Equals(value) != true)) {
                    this.OffsetValueField = value;
                    this.RaisePropertyChanged("OffsetValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId {
            get {
                return this.SiteIdField;
            }
            set {
                if ((this.SiteIdField.Equals(value) != true)) {
                    this.SiteIdField = value;
                    this.RaisePropertyChanged("SiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((this.SourceIdField.Equals(value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariableId {
            get {
                return this.VariableIdField;
            }
            set {
                if ((this.VariableIdField.Equals(value) != true)) {
                    this.VariableIdField = value;
                    this.RaisePropertyChanged("VariableId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityAttrValue", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class EntityAttrValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttrTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttrTypeId {
            get {
                return this.AttrTypeIdField;
            }
            set {
                if ((this.AttrTypeIdField.Equals(value) != true)) {
                    this.AttrTypeIdField = value;
                    this.RaisePropertyChanged("AttrTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateS {
            get {
                return this.DateSField;
            }
            set {
                if ((this.DateSField.Equals(value) != true)) {
                    this.DateSField = value;
                    this.RaisePropertyChanged("DateS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((this.EntityIdField.Equals(value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class StationType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameShortField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameShort {
            get {
                return this.NameShortField;
            }
            set {
                if ((object.ReferenceEquals(this.NameShortField, value) != true)) {
                    this.NameShortField = value;
                    this.RaisePropertyChanged("NameShort");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Variable", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class Variable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CodeErrDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CodeNoDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GeneralCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SampleMediumIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeSupportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariableTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CodeErrData {
            get {
                return this.CodeErrDataField;
            }
            set {
                if ((this.CodeErrDataField.Equals(value) != true)) {
                    this.CodeErrDataField = value;
                    this.RaisePropertyChanged("CodeErrData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CodeNoData {
            get {
                return this.CodeNoDataField;
            }
            set {
                if ((this.CodeNoDataField.Equals(value) != true)) {
                    this.CodeNoDataField = value;
                    this.RaisePropertyChanged("CodeNoData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataTypeId {
            get {
                return this.DataTypeIdField;
            }
            set {
                if ((this.DataTypeIdField.Equals(value) != true)) {
                    this.DataTypeIdField = value;
                    this.RaisePropertyChanged("DataTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GeneralCategoryId {
            get {
                return this.GeneralCategoryIdField;
            }
            set {
                if ((this.GeneralCategoryIdField.Equals(value) != true)) {
                    this.GeneralCategoryIdField = value;
                    this.RaisePropertyChanged("GeneralCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameC {
            get {
                return this.NameCField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCField, value) != true)) {
                    this.NameCField = value;
                    this.RaisePropertyChanged("NameC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SampleMediumId {
            get {
                return this.SampleMediumIdField;
            }
            set {
                if ((this.SampleMediumIdField.Equals(value) != true)) {
                    this.SampleMediumIdField = value;
                    this.RaisePropertyChanged("SampleMediumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeId {
            get {
                return this.TimeIdField;
            }
            set {
                if ((this.TimeIdField.Equals(value) != true)) {
                    this.TimeIdField = value;
                    this.RaisePropertyChanged("TimeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeSupport {
            get {
                return this.TimeSupportField;
            }
            set {
                if ((this.TimeSupportField.Equals(value) != true)) {
                    this.TimeSupportField = value;
                    this.RaisePropertyChanged("TimeSupport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((this.UnitIdField.Equals(value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueTypeId {
            get {
                return this.ValueTypeIdField;
            }
            set {
                if ((this.ValueTypeIdField.Equals(value) != true)) {
                    this.ValueTypeIdField = value;
                    this.RaisePropertyChanged("ValueTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariableTypeId {
            get {
                return this.VariableTypeIdField;
            }
            set {
                if ((this.VariableTypeIdField.Equals(value) != true)) {
                    this.VariableTypeIdField = value;
                    this.RaisePropertyChanged("VariableTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class GeoType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeteoZone", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class MeteoZone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UTCHourDayStartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UTCHourDayStart {
            get {
                return this.UTCHourDayStartField;
            }
            set {
                if ((this.UTCHourDayStartField.Equals(value) != true)) {
                    this.UTCHourDayStartField = value;
                    this.RaisePropertyChanged("UTCHourDayStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OffsetType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class OffsetType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitId {
            get {
                return this.UnitIdField;
            }
            set {
                if ((this.UnitIdField.Equals(value) != true)) {
                    this.UnitIdField = value;
                    this.RaisePropertyChanged("UnitId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteXSite", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class SiteXSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelationTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteId1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SiteId2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelationTypeId {
            get {
                return this.RelationTypeIdField;
            }
            set {
                if ((this.RelationTypeIdField.Equals(value) != true)) {
                    this.RelationTypeIdField = value;
                    this.RaisePropertyChanged("RelationTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId1 {
            get {
                return this.SiteId1Field;
            }
            set {
                if ((this.SiteId1Field.Equals(value) != true)) {
                    this.SiteId1Field = value;
                    this.RaisePropertyChanged("SiteId1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SiteId2 {
            get {
                return this.SiteId2Field;
            }
            set {
                if ((this.SiteId2Field.Equals(value) != true)) {
                    this.SiteId2Field = value;
                    this.RaisePropertyChanged("SiteId2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteXSiteType", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class SiteXSiteType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Unit", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class Unit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbbreviationEngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEngField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> SIConvertionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abbreviation {
            get {
                return this.AbbreviationField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationField, value) != true)) {
                    this.AbbreviationField = value;
                    this.RaisePropertyChanged("Abbreviation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbbreviationEng {
            get {
                return this.AbbreviationEngField;
            }
            set {
                if ((object.ReferenceEquals(this.AbbreviationEngField, value) != true)) {
                    this.AbbreviationEngField = value;
                    this.RaisePropertyChanged("AbbreviationEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEng {
            get {
                return this.NameEngField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEngField, value) != true)) {
                    this.NameEngField = value;
                    this.RaisePropertyChanged("NameEng");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> SIConvertion {
            get {
                return this.SIConvertionField;
            }
            set {
                if ((this.SIConvertionField.Equals(value) != true)) {
                    this.SIConvertionField = value;
                    this.RaisePropertyChanged("SIConvertion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VariableCode", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.Meta")]
    [System.SerializableAttribute()]
    public partial class VariableCode : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameShortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariableIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameShort {
            get {
                return this.NameShortField;
            }
            set {
                if ((object.ReferenceEquals(this.NameShortField, value) != true)) {
                    this.NameShortField = value;
                    this.RaisePropertyChanged("NameShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariableId {
            get {
                return this.VariableIdField;
            }
            set {
                if ((this.VariableIdField.Equals(value) != true)) {
                    this.VariableIdField = value;
                    this.RaisePropertyChanged("VariableId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AmurServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Open", ReplyAction="http://tempuri.org/IService/OpenResponse")]
        long Open(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Open", ReplyAction="http://tempuri.org/IService/OpenResponse")]
        System.Threading.Tasks.Task<long> OpenAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Close", ReplyAction="http://tempuri.org/IService/CloseResponse")]
        void Close(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Close", ReplyAction="http://tempuri.org/IService/CloseResponse")]
        System.Threading.Tasks.Task CloseAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationsByIndeces", ReplyAction="http://tempuri.org/IService/GetStationsByIndecesResponse")]
        Import.AmurServiceReference.Station[] GetStationsByIndeces(long hSvc, string[] stationIndeces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationsByIndeces", ReplyAction="http://tempuri.org/IService/GetStationsByIndecesResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Station[]> GetStationsByIndecesAsync(long hSvc, string[] stationIndeces);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParentFcsMethod", ReplyAction="http://tempuri.org/IService/GetParentFcsMethodResponse")]
        Import.AmurServiceReference.Method GetParentFcsMethod(long hSvc, int methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParentFcsMethod", ReplyAction="http://tempuri.org/IService/GetParentFcsMethodResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Method> GetParentFcsMethodAsync(long hSvc, int methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesPoints", ReplyAction="http://tempuri.org/IService/GetSitesPointsResponse")]
        System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoPoint> GetSitesPoints(long hSvc, int[] siteIds, System.DateTime dateActual, int siteAttrTypeIdLat, int siteAttrTypeIdLon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesPoints", ReplyAction="http://tempuri.org/IService/GetSitesPointsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoPoint>> GetSitesPointsAsync(long hSvc, int[] siteIds, System.DateTime dateActual, int siteAttrTypeIdLat, int siteAttrTypeIdLon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeoObjectsByStationIds", ReplyAction="http://tempuri.org/IService/GetGeoObjectsByStationIdsResponse")]
        System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoObject> GetGeoObjectsByStationIds(long hSvc, int[] stationIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeoObjectsByStationIds", ReplyAction="http://tempuri.org/IService/GetGeoObjectsByStationIdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoObject>> GetGeoObjectsByStationIdsAsync(long hSvc, int[] stationIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteAttrTypesAll", ReplyAction="http://tempuri.org/IService/GetSiteAttrTypesAllResponse")]
        Import.AmurServiceReference.SiteAttrType[] GetSiteAttrTypesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteAttrTypesAll", ReplyAction="http://tempuri.org/IService/GetSiteAttrTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SiteAttrType[]> GetSiteAttrTypesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesInBox", ReplyAction="http://tempuri.org/IService/GetSitesInBoxResponse")]
        Import.AmurServiceReference.Site[] GetSitesInBox(long hSvc, double south, double north, double west, double east);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesInBox", ReplyAction="http://tempuri.org/IService/GetSitesInBoxResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesInBoxAsync(long hSvc, double south, double north, double west, double east);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSampleMediumsAll", ReplyAction="http://tempuri.org/IService/GetSampleMediumsAllResponse")]
        Import.AmurServiceReference.SampleMedium[] GetSampleMediumsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSampleMediumsAll", ReplyAction="http://tempuri.org/IService/GetSampleMediumsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SampleMedium[]> GetSampleMediumsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesAttrValues", ReplyAction="http://tempuri.org/IService/GetSitesAttrValuesResponse")]
        Import.AmurServiceReference.EntityAttrValue[] GetSitesAttrValues(long hSvc, int[] siteId, int[] attrTypeId, System.Nullable<System.DateTime> dateActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesAttrValues", ReplyAction="http://tempuri.org/IService/GetSitesAttrValuesResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.EntityAttrValue[]> GetSitesAttrValuesAsync(long hSvc, int[] siteId, int[] attrTypeId, System.Nullable<System.DateTime> dateActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMethod", ReplyAction="http://tempuri.org/IService/GetMethodResponse")]
        Import.AmurServiceReference.Method GetMethod(long hSvc, int methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMethod", ReplyAction="http://tempuri.org/IService/GetMethodResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Method> GetMethodAsync(long hSvc, int methodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteAttrValue", ReplyAction="http://tempuri.org/IService/GetSiteAttrValueResponse")]
        Import.AmurServiceReference.EntityAttrValue GetSiteAttrValue(long hSvc, int siteId, int siteAttrTypeId, System.DateTime dateActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteAttrValue", ReplyAction="http://tempuri.org/IService/GetSiteAttrValueResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.EntityAttrValue> GetSiteAttrValueAsync(long hSvc, int siteId, int siteAttrTypeId, System.DateTime dateActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesAttrValue", ReplyAction="http://tempuri.org/IService/GetSitesAttrValueResponse")]
        Import.AmurServiceReference.EntityAttrValue[] GetSitesAttrValue(long hSvc, int[] siteId, int siteAttrTypeId, System.DateTime dateActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesAttrValue", ReplyAction="http://tempuri.org/IService/GetSitesAttrValueResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.EntityAttrValue[]> GetSitesAttrValueAsync(long hSvc, int[] siteId, int siteAttrTypeId, System.DateTime dateActual);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByType", ReplyAction="http://tempuri.org/IService/GetSitesByTypeResponse")]
        Import.AmurServiceReference.Site[] GetSitesByType(long hSvc, int siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByType", ReplyAction="http://tempuri.org/IService/GetSitesByTypeResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByTypeAsync(long hSvc, int siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByGroup", ReplyAction="http://tempuri.org/IService/GetSitesByGroupResponse")]
        Import.AmurServiceReference.Site[] GetSitesByGroup(long hSvc, int siteGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByGroup", ReplyAction="http://tempuri.org/IService/GetSitesByGroupResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByGroupAsync(long hSvc, int siteGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationByIndex", ReplyAction="http://tempuri.org/IService/GetStationByIndexResponse")]
        Import.AmurServiceReference.Station GetStationByIndex(long hSvc, string index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationByIndex", ReplyAction="http://tempuri.org/IService/GetStationByIndexResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Station> GetStationByIndexAsync(long hSvc, string index);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationsByList", ReplyAction="http://tempuri.org/IService/GetStationsByListResponse")]
        Import.AmurServiceReference.Station[] GetStationsByList(long hSvc, int[] stationIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationsByList", ReplyAction="http://tempuri.org/IService/GetStationsByListResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Station[]> GetStationsByListAsync(long hSvc, int[] stationIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationByAddrRegion", ReplyAction="http://tempuri.org/IService/GetStationByAddrRegionResponse")]
        Import.AmurServiceReference.Station[] GetStationByAddrRegion(long hSvc, int addrRegionId, System.Nullable<int> stationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationByAddrRegion", ReplyAction="http://tempuri.org/IService/GetStationByAddrRegionResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Station[]> GetStationByAddrRegionAsync(long hSvc, int addrRegionId, System.Nullable<int> stationTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationTypes", ReplyAction="http://tempuri.org/IService/GetStationTypesResponse")]
        Import.AmurServiceReference.StationType[] GetStationTypes(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetStationTypes", ReplyAction="http://tempuri.org/IService/GetStationTypesResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.StationType[]> GetStationTypesAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByStation", ReplyAction="http://tempuri.org/IService/GetSitesByStationResponse")]
        Import.AmurServiceReference.Site[] GetSitesByStation(long hSvc, int stationId, System.Nullable<int> siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByStation", ReplyAction="http://tempuri.org/IService/GetSitesByStationResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByStationAsync(long hSvc, int stationId, System.Nullable<int> siteTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByList", ReplyAction="http://tempuri.org/IService/GetSitesByListResponse")]
        Import.AmurServiceReference.Site[] GetSitesByList(long hSvc, int[] siteIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSitesByList", ReplyAction="http://tempuri.org/IService/GetSitesByListResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByListAsync(long hSvc, int[] siteIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariablesByList", ReplyAction="http://tempuri.org/IService/GetVariablesByListResponse")]
        Import.AmurServiceReference.Variable[] GetVariablesByList(long hSvc, int[] variableIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariablesByList", ReplyAction="http://tempuri.org/IService/GetVariablesByListResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Variable[]> GetVariablesByListAsync(long hSvc, int[] variableIdList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableById", ReplyAction="http://tempuri.org/IService/GetVariableByIdResponse")]
        Import.AmurServiceReference.Variable GetVariableById(long hSvc, int variableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableById", ReplyAction="http://tempuri.org/IService/GetVariableByIdResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Variable> GetVariableByIdAsync(long hSvc, int variableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableByKey", ReplyAction="http://tempuri.org/IService/GetVariableByKeyResponse")]
        Import.AmurServiceReference.Variable GetVariableByKey(long hSvc, int variableTypeId, int timeId, int unitId, int dataTypeId, int generalCategoryId, int sampleMediumId, int timeSupport, int valueTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableByKey", ReplyAction="http://tempuri.org/IService/GetVariableByKeyResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Variable> GetVariableByKeyAsync(long hSvc, int variableTypeId, int timeId, int unitId, int dataTypeId, int generalCategoryId, int sampleMediumId, int timeSupport, int valueTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariables", ReplyAction="http://tempuri.org/IService/GetVariablesResponse")]
        Import.AmurServiceReference.Variable[] GetVariables(long hSvc, int[] variableTypeId, int[] timeId, int[] unitId, int[] dataTypeId, int[] generalCategoryId, int[] sampleMediumId, int[] timeSupport, int[] valueTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariables", ReplyAction="http://tempuri.org/IService/GetVariablesResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Variable[]> GetVariablesAsync(long hSvc, int[] variableTypeId, int[] timeId, int[] unitId, int[] dataTypeId, int[] generalCategoryId, int[] sampleMediumId, int[] timeSupport, int[] valueTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariablesAll", ReplyAction="http://tempuri.org/IService/GetVariablesAllResponse")]
        Import.AmurServiceReference.Variable[] GetVariablesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariablesAll", ReplyAction="http://tempuri.org/IService/GetVariablesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Variable[]> GetVariablesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataTypesAll", ReplyAction="http://tempuri.org/IService/GetDataTypesAllResponse")]
        Import.AmurServiceReference.DataType[] GetDataTypesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataTypesAll", ReplyAction="http://tempuri.org/IService/GetDataTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.DataType[]> GetDataTypesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFlagAQCAll", ReplyAction="http://tempuri.org/IService/GetFlagAQCAllResponse")]
        System.Collections.Generic.Dictionary<short, string[]> GetFlagAQCAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFlagAQCAll", ReplyAction="http://tempuri.org/IService/GetFlagAQCAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<short, string[]>> GetFlagAQCAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeneralCategoryesAll", ReplyAction="http://tempuri.org/IService/GetGeneralCategoryesAllResponse")]
        Import.AmurServiceReference.GeneralCategory[] GetGeneralCategoryesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeneralCategoryesAll", ReplyAction="http://tempuri.org/IService/GetGeneralCategoryesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.GeneralCategory[]> GetGeneralCategoryesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeoObjectsAll", ReplyAction="http://tempuri.org/IService/GetGeoObjectsAllResponse")]
        Import.AmurServiceReference.GeoObject[] GetGeoObjectsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeoObjectsAll", ReplyAction="http://tempuri.org/IService/GetGeoObjectsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.GeoObject[]> GetGeoObjectsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeoObjectTypesAll", ReplyAction="http://tempuri.org/IService/GetGeoObjectTypesAllResponse")]
        Import.AmurServiceReference.GeoType[] GetGeoObjectTypesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGeoObjectTypesAll", ReplyAction="http://tempuri.org/IService/GetGeoObjectTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.GeoType[]> GetGeoObjectTypesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMeteoZonesAll", ReplyAction="http://tempuri.org/IService/GetMeteoZonesAllResponse")]
        Import.AmurServiceReference.MeteoZone[] GetMeteoZonesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMeteoZonesAll", ReplyAction="http://tempuri.org/IService/GetMeteoZonesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.MeteoZone[]> GetMeteoZonesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMethodsAll", ReplyAction="http://tempuri.org/IService/GetMethodsAllResponse")]
        Import.AmurServiceReference.Method[] GetMethodsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMethodsAll", ReplyAction="http://tempuri.org/IService/GetMethodsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Method[]> GetMethodsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMethodForecastsAll", ReplyAction="http://tempuri.org/IService/GetMethodForecastsAllResponse")]
        Import.AmurServiceReference.MethodForecast[] GetMethodForecastsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMethodForecastsAll", ReplyAction="http://tempuri.org/IService/GetMethodForecastsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.MethodForecast[]> GetMethodForecastsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOffsetTypesAll", ReplyAction="http://tempuri.org/IService/GetOffsetTypesAllResponse")]
        Import.AmurServiceReference.OffsetType[] GetOffsetTypesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOffsetTypesAll", ReplyAction="http://tempuri.org/IService/GetOffsetTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.OffsetType[]> GetOffsetTypesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteXSitesByLeftSite", ReplyAction="http://tempuri.org/IService/GetSiteXSitesByLeftSiteResponse")]
        Import.AmurServiceReference.SiteXSite[] GetSiteXSitesByLeftSite(long hSvc, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteXSitesByLeftSite", ReplyAction="http://tempuri.org/IService/GetSiteXSitesByLeftSiteResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SiteXSite[]> GetSiteXSitesByLeftSiteAsync(long hSvc, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteXSitesByRightSite", ReplyAction="http://tempuri.org/IService/GetSiteXSitesByRightSiteResponse")]
        Import.AmurServiceReference.SiteXSite[] GetSiteXSitesByRightSite(long hSvc, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteXSitesByRightSite", ReplyAction="http://tempuri.org/IService/GetSiteXSitesByRightSiteResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SiteXSite[]> GetSiteXSitesByRightSiteAsync(long hSvc, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteXSiteTypesAll", ReplyAction="http://tempuri.org/IService/GetSiteXSiteTypesAllResponse")]
        Import.AmurServiceReference.SiteXSiteType[] GetSiteXSiteTypesAll(long hSvc, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSiteXSiteTypesAll", ReplyAction="http://tempuri.org/IService/GetSiteXSiteTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SiteXSiteType[]> GetSiteXSiteTypesAllAsync(long hSvc, int siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUnitsAll", ReplyAction="http://tempuri.org/IService/GetUnitsAllResponse")]
        Import.AmurServiceReference.Unit[] GetUnitsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUnitsAll", ReplyAction="http://tempuri.org/IService/GetUnitsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Unit[]> GetUnitsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetValueTypesAll", ReplyAction="http://tempuri.org/IService/GetValueTypesAllResponse")]
        Import.AmurServiceReference.ValueType[] GetValueTypesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetValueTypesAll", ReplyAction="http://tempuri.org/IService/GetValueTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.ValueType[]> GetValueTypesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableCodesAll", ReplyAction="http://tempuri.org/IService/GetVariableCodesAllResponse")]
        Import.AmurServiceReference.VariableCode[] GetVariableCodesAll(long hSvc, int variableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableCodesAll", ReplyAction="http://tempuri.org/IService/GetVariableCodesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.VariableCode[]> GetVariableCodesAllAsync(long hSvc, int variableId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableTypesAll", ReplyAction="http://tempuri.org/IService/GetVariableTypesAllResponse")]
        Import.AmurServiceReference.VariableType[] GetVariableTypesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVariableTypesAll", ReplyAction="http://tempuri.org/IService/GetVariableTypesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.VariableType[]> GetVariableTypesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurvesBySites", ReplyAction="http://tempuri.org/IService/GetCurvesBySitesResponse")]
        System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.Curve[]> GetCurvesBySites(long hSvc, int[] sitesId, int variableIdX, int variableIdY, System.DateTime[] seriaDateSInterval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurvesBySites", ReplyAction="http://tempuri.org/IService/GetCurvesBySitesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.Curve[]>> GetCurvesBySitesAsync(long hSvc, int[] sitesId, int variableIdX, int variableIdY, System.DateTime[] seriaDateSInterval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurveByCatalog", ReplyAction="http://tempuri.org/IService/GetCurveByCatalogResponse")]
        Import.AmurServiceReference.Curve GetCurveByCatalog(long hSvc, int catalog_id_x, int catalog_id_y, System.DateTime[] seriaDateSInterval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCurveByCatalog", ReplyAction="http://tempuri.org/IService/GetCurveByCatalogResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Curve> GetCurveByCatalogAsync(long hSvc, int catalog_id_x, int catalog_id_y, System.DateTime[] seriaDateSInterval);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecastsByIdList", ReplyAction="http://tempuri.org/IService/GetDataForecastsByIdListResponse")]
        System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.DataForecast[]> GetDataForecastsByIdList(long hSvc, int[] catalogIds, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecastsByIdList", ReplyAction="http://tempuri.org/IService/GetDataForecastsByIdListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.DataForecast[]>> GetDataForecastsByIdListAsync(long hSvc, int[] catalogIds, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataSources", ReplyAction="http://tempuri.org/IService/GetDataSourcesResponse")]
        System.Collections.Generic.Dictionary<long, Import.AmurServiceReference.DataSource> GetDataSources(long hSvc, long[] dataValueIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataSources", ReplyAction="http://tempuri.org/IService/GetDataSourcesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, Import.AmurServiceReference.DataSource>> GetDataSourcesAsync(long hSvc, long[] dataValueIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataValues", ReplyAction="http://tempuri.org/IService/GetDataValuesResponse")]
        System.Collections.Generic.Dictionary<Import.AmurServiceReference.Catalog, Import.AmurServiceReference.DataValue[]> GetDataValues(long hSvc, System.DateTime dateS, System.DateTime dateF, bool isDateLOC, int[] siteId, int[] variableId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue, System.Nullable<byte> flagAQC, bool isActualValueOnly, bool isSelectDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataValues", ReplyAction="http://tempuri.org/IService/GetDataValuesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Import.AmurServiceReference.Catalog, Import.AmurServiceReference.DataValue[]>> GetDataValuesAsync(long hSvc, System.DateTime dateS, System.DateTime dateF, bool isDateLOC, int[] siteId, int[] variableId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue, System.Nullable<byte> flagAQC, bool isActualValueOnly, bool isSelectDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecasts", ReplyAction="http://tempuri.org/IService/GetDataForecastsResponse")]
        Import.AmurServiceReference.DataForecast[] GetDataForecasts(long hSvc, int catalogId, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecasts", ReplyAction="http://tempuri.org/IService/GetDataForecastsResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.DataForecast[]> GetDataForecastsAsync(long hSvc, int catalogId, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCatalogListById", ReplyAction="http://tempuri.org/IService/GetCatalogListByIdResponse")]
        Import.AmurServiceReference.Catalog[] GetCatalogListById(long hSvc, int[] ctlId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCatalogListById", ReplyAction="http://tempuri.org/IService/GetCatalogListByIdResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog[]> GetCatalogListByIdAsync(long hSvc, int[] ctlId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCatalogList", ReplyAction="http://tempuri.org/IService/GetCatalogListResponse")]
        Import.AmurServiceReference.Catalog[] GetCatalogList(long hSvc, int[] siteId, int[] varId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCatalogList", ReplyAction="http://tempuri.org/IService/GetCatalogListResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog[]> GetCatalogListAsync(long hSvc, int[] siteId, int[] varId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCatalog", ReplyAction="http://tempuri.org/IService/GetCatalogResponse")]
        Import.AmurServiceReference.Catalog GetCatalog(long hSvc, int siteId, int varId, int offsetTypeId, int methodId, int sourceId, double offsetValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCatalog", ReplyAction="http://tempuri.org/IService/GetCatalogResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog> GetCatalogAsync(long hSvc, int siteId, int varId, int offsetTypeId, int methodId, int sourceId, double offsetValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataPDataValueAQC", ReplyAction="http://tempuri.org/IService/GetDataPDataValueAQCResponse")]
        Import.AmurServiceReference.AQCDataValue[] GetDataPDataValueAQC(long hSvc, long dvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataPDataValueAQC", ReplyAction="http://tempuri.org/IService/GetDataPDataValueAQCResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.AQCDataValue[]> GetDataPDataValueAQCAsync(long hSvc, long dvId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParserSysObj", ReplyAction="http://tempuri.org/IService/GetParserSysObjResponse")]
        Import.AmurServiceReference.SysObj GetParserSysObj(long hSvc, int sysObjId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParserSysObj", ReplyAction="http://tempuri.org/IService/GetParserSysObjResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SysObj> GetParserSysObjAsync(long hSvc, int sysObjId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParserSysParsersXSites", ReplyAction="http://tempuri.org/IService/GetParserSysParsersXSitesResponse")]
        Import.AmurServiceReference.SysParsersXSites[] GetParserSysParsersXSites(long hSvc, int sysObjId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParserSysParsersXSites", ReplyAction="http://tempuri.org/IService/GetParserSysParsersXSitesResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SysParsersXSites[]> GetParserSysParsersXSitesAsync(long hSvc, int sysObjId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParserSysParsersParams", ReplyAction="http://tempuri.org/IService/GetParserSysParsersParamsResponse")]
        Import.AmurServiceReference.SysParsersParams[] GetParserSysParsersParams(long hSvc, int[] sysParsersParamsSetIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetParserSysParsersParams", ReplyAction="http://tempuri.org/IService/GetParserSysParsersParamsResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.SysParsersParams[]> GetParserSysParsersParamsAsync(long hSvc, int[] sysParsersParamsSetIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrg", ReplyAction="http://tempuri.org/IService/GetOrgResponse")]
        Import.AmurServiceReference.Org GetOrg(long hSvc, int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrg", ReplyAction="http://tempuri.org/IService/GetOrgResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Org> GetOrgAsync(long hSvc, int orgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrgsById", ReplyAction="http://tempuri.org/IService/GetOrgsByIdResponse")]
        Import.AmurServiceReference.Org[] GetOrgsById(long hSvc, int[] orgIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrgsById", ReplyAction="http://tempuri.org/IService/GetOrgsByIdResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Org[]> GetOrgsByIdAsync(long hSvc, int[] orgIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrgsAll", ReplyAction="http://tempuri.org/IService/GetOrgsAllResponse")]
        Import.AmurServiceReference.Org[] GetOrgsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetOrgsAll", ReplyAction="http://tempuri.org/IService/GetOrgsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Org[]> GetOrgsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPerson", ReplyAction="http://tempuri.org/IService/GetPersonResponse")]
        Import.AmurServiceReference.Person GetPerson(long hSvc, int personIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPerson", ReplyAction="http://tempuri.org/IService/GetPersonResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Person> GetPersonAsync(long hSvc, int personIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPersonsById", ReplyAction="http://tempuri.org/IService/GetPersonsByIdResponse")]
        Import.AmurServiceReference.Person[] GetPersonsById(long hSvc, int[] personIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPersonsById", ReplyAction="http://tempuri.org/IService/GetPersonsByIdResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Person[]> GetPersonsByIdAsync(long hSvc, int[] personIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPersonsAll", ReplyAction="http://tempuri.org/IService/GetPersonsAllResponse")]
        Import.AmurServiceReference.Person[] GetPersonsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPersonsAll", ReplyAction="http://tempuri.org/IService/GetPersonsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Person[]> GetPersonsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAddrs", ReplyAction="http://tempuri.org/IService/GetAddrsResponse")]
        Import.AmurServiceReference.Addr[] GetAddrs(long hSvc, int[] parentAddrRegionsId, bool isWithChilds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAddrs", ReplyAction="http://tempuri.org/IService/GetAddrsResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Addr[]> GetAddrsAsync(long hSvc, int[] parentAddrRegionsId, bool isWithChilds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAddrsAll", ReplyAction="http://tempuri.org/IService/GetAddrsAllResponse")]
        Import.AmurServiceReference.Addr[] GetAddrsAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAddrsAll", ReplyAction="http://tempuri.org/IService/GetAddrsAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Addr[]> GetAddrsAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLegalEntity", ReplyAction="http://tempuri.org/IService/GetLegalEntityResponse")]
        Import.AmurServiceReference.LegalEntity GetLegalEntity(long hSvc, int leIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLegalEntity", ReplyAction="http://tempuri.org/IService/GetLegalEntityResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.LegalEntity> GetLegalEntityAsync(long hSvc, int leIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLegalEntityesById", ReplyAction="http://tempuri.org/IService/GetLegalEntityesByIdResponse")]
        Import.AmurServiceReference.LegalEntity[] GetLegalEntityesById(long hSvc, int[] leIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLegalEntityesById", ReplyAction="http://tempuri.org/IService/GetLegalEntityesByIdResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.LegalEntity[]> GetLegalEntityesByIdAsync(long hSvc, int[] leIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLegalEntityesAll", ReplyAction="http://tempuri.org/IService/GetLegalEntityesAllResponse")]
        Import.AmurServiceReference.LegalEntity[] GetLegalEntityesAll(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLegalEntityesAll", ReplyAction="http://tempuri.org/IService/GetLegalEntityesAllResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.LegalEntity[]> GetLegalEntityesAllAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveVariableCode", ReplyAction="http://tempuri.org/IService/SaveVariableCodeResponse")]
        void SaveVariableCode(long hSvc, Import.AmurServiceReference.VariableCode vc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveVariableCode", ReplyAction="http://tempuri.org/IService/SaveVariableCodeResponse")]
        System.Threading.Tasks.Task SaveVariableCodeAsync(long hSvc, Import.AmurServiceReference.VariableCode vc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStation", ReplyAction="http://tempuri.org/IService/UpdateStationResponse")]
        void UpdateStation(long hSvc, Import.AmurServiceReference.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateStation", ReplyAction="http://tempuri.org/IService/UpdateStationResponse")]
        System.Threading.Tasks.Task UpdateStationAsync(long hSvc, Import.AmurServiceReference.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveSiteAttribute", ReplyAction="http://tempuri.org/IService/SaveSiteAttributeResponse")]
        void SaveSiteAttribute(long hSvc, Import.AmurServiceReference.EntityAttrValue eav);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveSiteAttribute", ReplyAction="http://tempuri.org/IService/SaveSiteAttributeResponse")]
        System.Threading.Tasks.Task SaveSiteAttributeAsync(long hSvc, Import.AmurServiceReference.EntityAttrValue eav);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveSite", ReplyAction="http://tempuri.org/IService/SaveSiteResponse")]
        int SaveSite(long hSvc, Import.AmurServiceReference.Site site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveSite", ReplyAction="http://tempuri.org/IService/SaveSiteResponse")]
        System.Threading.Tasks.Task<int> SaveSiteAsync(long hSvc, Import.AmurServiceReference.Site site);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveStation", ReplyAction="http://tempuri.org/IService/SaveStationResponse")]
        int SaveStation(long hSvc, Import.AmurServiceReference.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveStation", ReplyAction="http://tempuri.org/IService/SaveStationResponse")]
        System.Threading.Tasks.Task<int> SaveStationAsync(long hSvc, Import.AmurServiceReference.Station station);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCatalog", ReplyAction="http://tempuri.org/IService/SaveCatalogResponse")]
        Import.AmurServiceReference.Catalog SaveCatalog(long hSvc, Import.AmurServiceReference.Catalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCatalog", ReplyAction="http://tempuri.org/IService/SaveCatalogResponse")]
        System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog> SaveCatalogAsync(long hSvc, Import.AmurServiceReference.Catalog catalog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCurveSeria", ReplyAction="http://tempuri.org/IService/UpdateCurveSeriaResponse")]
        void UpdateCurveSeria(long hSvc, int seriaId, System.DateTime dateS, string description, Import.AmurServiceReference.Curve.Seria.Point[] points, Import.AmurServiceReference.Curve.Seria.Coef[] coefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCurveSeria", ReplyAction="http://tempuri.org/IService/UpdateCurveSeriaResponse")]
        System.Threading.Tasks.Task UpdateCurveSeriaAsync(long hSvc, int seriaId, System.DateTime dateS, string description, Import.AmurServiceReference.Curve.Seria.Point[] points, Import.AmurServiceReference.Curve.Seria.Coef[] coefs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCurveSeries", ReplyAction="http://tempuri.org/IService/SaveCurveSeriesResponse")]
        void SaveCurveSeries(long hSvc, Import.AmurServiceReference.Curve.Seria[] series);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCurveSeries", ReplyAction="http://tempuri.org/IService/SaveCurveSeriesResponse")]
        System.Threading.Tasks.Task SaveCurveSeriesAsync(long hSvc, Import.AmurServiceReference.Curve.Seria[] series);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCurve", ReplyAction="http://tempuri.org/IService/SaveCurveResponse")]
        int SaveCurve(long hSvc, Import.AmurServiceReference.Curve curve);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveCurve", ReplyAction="http://tempuri.org/IService/SaveCurveResponse")]
        System.Threading.Tasks.Task<int> SaveCurveAsync(long hSvc, Import.AmurServiceReference.Curve curve);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizeDataValue", ReplyAction="http://tempuri.org/IService/ActualizeDataValueResponse")]
        void ActualizeDataValue(long hSvc, long dataValueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizeDataValue", ReplyAction="http://tempuri.org/IService/ActualizeDataValueResponse")]
        System.Threading.Tasks.Task ActualizeDataValueAsync(long hSvc, long dataValueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveValue", ReplyAction="http://tempuri.org/IService/SaveValueResponse")]
        long SaveValue(long hSvc, int catalogId, System.DateTime dateUTC, System.DateTime dateLOC, double value, byte flagAQC, System.Nullable<long> dataSourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveValue", ReplyAction="http://tempuri.org/IService/SaveValueResponse")]
        System.Threading.Tasks.Task<long> SaveValueAsync(long hSvc, int catalogId, System.DateTime dateUTC, System.DateTime dateLOC, double value, byte flagAQC, System.Nullable<long> dataSourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataValue", ReplyAction="http://tempuri.org/IService/SaveDataValueResponse")]
        long SaveDataValue(long hSvc, Import.AmurServiceReference.DataValue dv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataValue", ReplyAction="http://tempuri.org/IService/SaveDataValueResponse")]
        System.Threading.Tasks.Task<long> SaveDataValueAsync(long hSvc, Import.AmurServiceReference.DataValue dv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataValueXSource", ReplyAction="http://tempuri.org/IService/SaveDataValueXSourceResponse")]
        void SaveDataValueXSource(long hSvc, int dataValueId, long dataSourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataValueXSource", ReplyAction="http://tempuri.org/IService/SaveDataValueXSourceResponse")]
        System.Threading.Tasks.Task SaveDataValueXSourceAsync(long hSvc, int dataValueId, long dataSourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataSource", ReplyAction="http://tempuri.org/IService/SaveDataSourceResponse")]
        long SaveDataSource(long hSvc, Import.AmurServiceReference.DataSource dataSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataSource", ReplyAction="http://tempuri.org/IService/SaveDataSourceResponse")]
        System.Threading.Tasks.Task<long> SaveDataSourceAsync(long hSvc, Import.AmurServiceReference.DataSource dataSource);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataValueList", ReplyAction="http://tempuri.org/IService/SaveDataValueListResponse")]
        void SaveDataValueList(long hSvc, Import.AmurServiceReference.DataValue[] dvs, System.Nullable<long> dataSourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataValueList", ReplyAction="http://tempuri.org/IService/SaveDataValueListResponse")]
        System.Threading.Tasks.Task SaveDataValueListAsync(long hSvc, Import.AmurServiceReference.DataValue[] dvs, System.Nullable<long> dataSourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataForecastList", ReplyAction="http://tempuri.org/IService/SaveDataForecastListResponse")]
        void SaveDataForecastList(long hSvc, Import.AmurServiceReference.DataForecast[] dvs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataForecastList", ReplyAction="http://tempuri.org/IService/SaveDataForecastListResponse")]
        System.Threading.Tasks.Task SaveDataForecastListAsync(long hSvc, Import.AmurServiceReference.DataForecast[] dvs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataPRole", ReplyAction="http://tempuri.org/IService/SaveDataPRoleResponse")]
        void SaveDataPRole(long hSvc, long dvId, int roleId, bool isAQCApplied);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveDataPRole", ReplyAction="http://tempuri.org/IService/SaveDataPRoleResponse")]
        System.Threading.Tasks.Task SaveDataPRoleAsync(long hSvc, long dvId, int roleId, bool isAQCApplied);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveParserSysObjLastStartParam", ReplyAction="http://tempuri.org/IService/SaveParserSysObjLastStartParamResponse")]
        void SaveParserSysObjLastStartParam(long hSvc, int sysObjId, string lastStartParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SaveParserSysObjLastStartParam", ReplyAction="http://tempuri.org/IService/SaveParserSysObjLastStartParamResponse")]
        System.Threading.Tasks.Task SaveParserSysObjLastStartParamAsync(long hSvc, int sysObjId, string lastStartParam);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Import.AmurServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Import.AmurServiceReference.IService>, Import.AmurServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long Open(string userName, string password) {
            return base.Channel.Open(userName, password);
        }
        
        public System.Threading.Tasks.Task<long> OpenAsync(string userName, string password) {
            return base.Channel.OpenAsync(userName, password);
        }
        
        public void Close(long hSvc) {
            base.Channel.Close(hSvc);
        }
        
        public System.Threading.Tasks.Task CloseAsync(long hSvc) {
            return base.Channel.CloseAsync(hSvc);
        }
        
        public Import.AmurServiceReference.Station[] GetStationsByIndeces(long hSvc, string[] stationIndeces) {
            return base.Channel.GetStationsByIndeces(hSvc, stationIndeces);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Station[]> GetStationsByIndecesAsync(long hSvc, string[] stationIndeces) {
            return base.Channel.GetStationsByIndecesAsync(hSvc, stationIndeces);
        }
        
        public Import.AmurServiceReference.Method GetParentFcsMethod(long hSvc, int methodId) {
            return base.Channel.GetParentFcsMethod(hSvc, methodId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Method> GetParentFcsMethodAsync(long hSvc, int methodId) {
            return base.Channel.GetParentFcsMethodAsync(hSvc, methodId);
        }
        
        public System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoPoint> GetSitesPoints(long hSvc, int[] siteIds, System.DateTime dateActual, int siteAttrTypeIdLat, int siteAttrTypeIdLon) {
            return base.Channel.GetSitesPoints(hSvc, siteIds, dateActual, siteAttrTypeIdLat, siteAttrTypeIdLon);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoPoint>> GetSitesPointsAsync(long hSvc, int[] siteIds, System.DateTime dateActual, int siteAttrTypeIdLat, int siteAttrTypeIdLon) {
            return base.Channel.GetSitesPointsAsync(hSvc, siteIds, dateActual, siteAttrTypeIdLat, siteAttrTypeIdLon);
        }
        
        public System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoObject> GetGeoObjectsByStationIds(long hSvc, int[] stationIds) {
            return base.Channel.GetGeoObjectsByStationIds(hSvc, stationIds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.GeoObject>> GetGeoObjectsByStationIdsAsync(long hSvc, int[] stationIds) {
            return base.Channel.GetGeoObjectsByStationIdsAsync(hSvc, stationIds);
        }
        
        public Import.AmurServiceReference.SiteAttrType[] GetSiteAttrTypesAll(long hSvc) {
            return base.Channel.GetSiteAttrTypesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SiteAttrType[]> GetSiteAttrTypesAllAsync(long hSvc) {
            return base.Channel.GetSiteAttrTypesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.Site[] GetSitesInBox(long hSvc, double south, double north, double west, double east) {
            return base.Channel.GetSitesInBox(hSvc, south, north, west, east);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesInBoxAsync(long hSvc, double south, double north, double west, double east) {
            return base.Channel.GetSitesInBoxAsync(hSvc, south, north, west, east);
        }
        
        public Import.AmurServiceReference.SampleMedium[] GetSampleMediumsAll(long hSvc) {
            return base.Channel.GetSampleMediumsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SampleMedium[]> GetSampleMediumsAllAsync(long hSvc) {
            return base.Channel.GetSampleMediumsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.EntityAttrValue[] GetSitesAttrValues(long hSvc, int[] siteId, int[] attrTypeId, System.Nullable<System.DateTime> dateActual) {
            return base.Channel.GetSitesAttrValues(hSvc, siteId, attrTypeId, dateActual);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.EntityAttrValue[]> GetSitesAttrValuesAsync(long hSvc, int[] siteId, int[] attrTypeId, System.Nullable<System.DateTime> dateActual) {
            return base.Channel.GetSitesAttrValuesAsync(hSvc, siteId, attrTypeId, dateActual);
        }
        
        public Import.AmurServiceReference.Method GetMethod(long hSvc, int methodId) {
            return base.Channel.GetMethod(hSvc, methodId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Method> GetMethodAsync(long hSvc, int methodId) {
            return base.Channel.GetMethodAsync(hSvc, methodId);
        }
        
        public Import.AmurServiceReference.EntityAttrValue GetSiteAttrValue(long hSvc, int siteId, int siteAttrTypeId, System.DateTime dateActual) {
            return base.Channel.GetSiteAttrValue(hSvc, siteId, siteAttrTypeId, dateActual);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.EntityAttrValue> GetSiteAttrValueAsync(long hSvc, int siteId, int siteAttrTypeId, System.DateTime dateActual) {
            return base.Channel.GetSiteAttrValueAsync(hSvc, siteId, siteAttrTypeId, dateActual);
        }
        
        public Import.AmurServiceReference.EntityAttrValue[] GetSitesAttrValue(long hSvc, int[] siteId, int siteAttrTypeId, System.DateTime dateActual) {
            return base.Channel.GetSitesAttrValue(hSvc, siteId, siteAttrTypeId, dateActual);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.EntityAttrValue[]> GetSitesAttrValueAsync(long hSvc, int[] siteId, int siteAttrTypeId, System.DateTime dateActual) {
            return base.Channel.GetSitesAttrValueAsync(hSvc, siteId, siteAttrTypeId, dateActual);
        }
        
        public Import.AmurServiceReference.Site[] GetSitesByType(long hSvc, int siteTypeId) {
            return base.Channel.GetSitesByType(hSvc, siteTypeId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByTypeAsync(long hSvc, int siteTypeId) {
            return base.Channel.GetSitesByTypeAsync(hSvc, siteTypeId);
        }
        
        public Import.AmurServiceReference.Site[] GetSitesByGroup(long hSvc, int siteGroupId) {
            return base.Channel.GetSitesByGroup(hSvc, siteGroupId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByGroupAsync(long hSvc, int siteGroupId) {
            return base.Channel.GetSitesByGroupAsync(hSvc, siteGroupId);
        }
        
        public Import.AmurServiceReference.Station GetStationByIndex(long hSvc, string index) {
            return base.Channel.GetStationByIndex(hSvc, index);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Station> GetStationByIndexAsync(long hSvc, string index) {
            return base.Channel.GetStationByIndexAsync(hSvc, index);
        }
        
        public Import.AmurServiceReference.Station[] GetStationsByList(long hSvc, int[] stationIdList) {
            return base.Channel.GetStationsByList(hSvc, stationIdList);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Station[]> GetStationsByListAsync(long hSvc, int[] stationIdList) {
            return base.Channel.GetStationsByListAsync(hSvc, stationIdList);
        }
        
        public Import.AmurServiceReference.Station[] GetStationByAddrRegion(long hSvc, int addrRegionId, System.Nullable<int> stationTypeId) {
            return base.Channel.GetStationByAddrRegion(hSvc, addrRegionId, stationTypeId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Station[]> GetStationByAddrRegionAsync(long hSvc, int addrRegionId, System.Nullable<int> stationTypeId) {
            return base.Channel.GetStationByAddrRegionAsync(hSvc, addrRegionId, stationTypeId);
        }
        
        public Import.AmurServiceReference.StationType[] GetStationTypes(long hSvc) {
            return base.Channel.GetStationTypes(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.StationType[]> GetStationTypesAsync(long hSvc) {
            return base.Channel.GetStationTypesAsync(hSvc);
        }
        
        public Import.AmurServiceReference.Site[] GetSitesByStation(long hSvc, int stationId, System.Nullable<int> siteTypeId) {
            return base.Channel.GetSitesByStation(hSvc, stationId, siteTypeId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByStationAsync(long hSvc, int stationId, System.Nullable<int> siteTypeId) {
            return base.Channel.GetSitesByStationAsync(hSvc, stationId, siteTypeId);
        }
        
        public Import.AmurServiceReference.Site[] GetSitesByList(long hSvc, int[] siteIdList) {
            return base.Channel.GetSitesByList(hSvc, siteIdList);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Site[]> GetSitesByListAsync(long hSvc, int[] siteIdList) {
            return base.Channel.GetSitesByListAsync(hSvc, siteIdList);
        }
        
        public Import.AmurServiceReference.Variable[] GetVariablesByList(long hSvc, int[] variableIdList) {
            return base.Channel.GetVariablesByList(hSvc, variableIdList);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Variable[]> GetVariablesByListAsync(long hSvc, int[] variableIdList) {
            return base.Channel.GetVariablesByListAsync(hSvc, variableIdList);
        }
        
        public Import.AmurServiceReference.Variable GetVariableById(long hSvc, int variableId) {
            return base.Channel.GetVariableById(hSvc, variableId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Variable> GetVariableByIdAsync(long hSvc, int variableId) {
            return base.Channel.GetVariableByIdAsync(hSvc, variableId);
        }
        
        public Import.AmurServiceReference.Variable GetVariableByKey(long hSvc, int variableTypeId, int timeId, int unitId, int dataTypeId, int generalCategoryId, int sampleMediumId, int timeSupport, int valueTypeId) {
            return base.Channel.GetVariableByKey(hSvc, variableTypeId, timeId, unitId, dataTypeId, generalCategoryId, sampleMediumId, timeSupport, valueTypeId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Variable> GetVariableByKeyAsync(long hSvc, int variableTypeId, int timeId, int unitId, int dataTypeId, int generalCategoryId, int sampleMediumId, int timeSupport, int valueTypeId) {
            return base.Channel.GetVariableByKeyAsync(hSvc, variableTypeId, timeId, unitId, dataTypeId, generalCategoryId, sampleMediumId, timeSupport, valueTypeId);
        }
        
        public Import.AmurServiceReference.Variable[] GetVariables(long hSvc, int[] variableTypeId, int[] timeId, int[] unitId, int[] dataTypeId, int[] generalCategoryId, int[] sampleMediumId, int[] timeSupport, int[] valueTypeId) {
            return base.Channel.GetVariables(hSvc, variableTypeId, timeId, unitId, dataTypeId, generalCategoryId, sampleMediumId, timeSupport, valueTypeId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Variable[]> GetVariablesAsync(long hSvc, int[] variableTypeId, int[] timeId, int[] unitId, int[] dataTypeId, int[] generalCategoryId, int[] sampleMediumId, int[] timeSupport, int[] valueTypeId) {
            return base.Channel.GetVariablesAsync(hSvc, variableTypeId, timeId, unitId, dataTypeId, generalCategoryId, sampleMediumId, timeSupport, valueTypeId);
        }
        
        public Import.AmurServiceReference.Variable[] GetVariablesAll(long hSvc) {
            return base.Channel.GetVariablesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Variable[]> GetVariablesAllAsync(long hSvc) {
            return base.Channel.GetVariablesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.DataType[] GetDataTypesAll(long hSvc) {
            return base.Channel.GetDataTypesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.DataType[]> GetDataTypesAllAsync(long hSvc) {
            return base.Channel.GetDataTypesAllAsync(hSvc);
        }
        
        public System.Collections.Generic.Dictionary<short, string[]> GetFlagAQCAll(long hSvc) {
            return base.Channel.GetFlagAQCAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<short, string[]>> GetFlagAQCAllAsync(long hSvc) {
            return base.Channel.GetFlagAQCAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.GeneralCategory[] GetGeneralCategoryesAll(long hSvc) {
            return base.Channel.GetGeneralCategoryesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.GeneralCategory[]> GetGeneralCategoryesAllAsync(long hSvc) {
            return base.Channel.GetGeneralCategoryesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.GeoObject[] GetGeoObjectsAll(long hSvc) {
            return base.Channel.GetGeoObjectsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.GeoObject[]> GetGeoObjectsAllAsync(long hSvc) {
            return base.Channel.GetGeoObjectsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.GeoType[] GetGeoObjectTypesAll(long hSvc) {
            return base.Channel.GetGeoObjectTypesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.GeoType[]> GetGeoObjectTypesAllAsync(long hSvc) {
            return base.Channel.GetGeoObjectTypesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.MeteoZone[] GetMeteoZonesAll(long hSvc) {
            return base.Channel.GetMeteoZonesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.MeteoZone[]> GetMeteoZonesAllAsync(long hSvc) {
            return base.Channel.GetMeteoZonesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.Method[] GetMethodsAll(long hSvc) {
            return base.Channel.GetMethodsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Method[]> GetMethodsAllAsync(long hSvc) {
            return base.Channel.GetMethodsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.MethodForecast[] GetMethodForecastsAll(long hSvc) {
            return base.Channel.GetMethodForecastsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.MethodForecast[]> GetMethodForecastsAllAsync(long hSvc) {
            return base.Channel.GetMethodForecastsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.OffsetType[] GetOffsetTypesAll(long hSvc) {
            return base.Channel.GetOffsetTypesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.OffsetType[]> GetOffsetTypesAllAsync(long hSvc) {
            return base.Channel.GetOffsetTypesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.SiteXSite[] GetSiteXSitesByLeftSite(long hSvc, int siteId) {
            return base.Channel.GetSiteXSitesByLeftSite(hSvc, siteId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SiteXSite[]> GetSiteXSitesByLeftSiteAsync(long hSvc, int siteId) {
            return base.Channel.GetSiteXSitesByLeftSiteAsync(hSvc, siteId);
        }
        
        public Import.AmurServiceReference.SiteXSite[] GetSiteXSitesByRightSite(long hSvc, int siteId) {
            return base.Channel.GetSiteXSitesByRightSite(hSvc, siteId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SiteXSite[]> GetSiteXSitesByRightSiteAsync(long hSvc, int siteId) {
            return base.Channel.GetSiteXSitesByRightSiteAsync(hSvc, siteId);
        }
        
        public Import.AmurServiceReference.SiteXSiteType[] GetSiteXSiteTypesAll(long hSvc, int siteId) {
            return base.Channel.GetSiteXSiteTypesAll(hSvc, siteId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SiteXSiteType[]> GetSiteXSiteTypesAllAsync(long hSvc, int siteId) {
            return base.Channel.GetSiteXSiteTypesAllAsync(hSvc, siteId);
        }
        
        public Import.AmurServiceReference.Unit[] GetUnitsAll(long hSvc) {
            return base.Channel.GetUnitsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Unit[]> GetUnitsAllAsync(long hSvc) {
            return base.Channel.GetUnitsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.ValueType[] GetValueTypesAll(long hSvc) {
            return base.Channel.GetValueTypesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.ValueType[]> GetValueTypesAllAsync(long hSvc) {
            return base.Channel.GetValueTypesAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.VariableCode[] GetVariableCodesAll(long hSvc, int variableId) {
            return base.Channel.GetVariableCodesAll(hSvc, variableId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.VariableCode[]> GetVariableCodesAllAsync(long hSvc, int variableId) {
            return base.Channel.GetVariableCodesAllAsync(hSvc, variableId);
        }
        
        public Import.AmurServiceReference.VariableType[] GetVariableTypesAll(long hSvc) {
            return base.Channel.GetVariableTypesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.VariableType[]> GetVariableTypesAllAsync(long hSvc) {
            return base.Channel.GetVariableTypesAllAsync(hSvc);
        }
        
        public System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.Curve[]> GetCurvesBySites(long hSvc, int[] sitesId, int variableIdX, int variableIdY, System.DateTime[] seriaDateSInterval) {
            return base.Channel.GetCurvesBySites(hSvc, sitesId, variableIdX, variableIdY, seriaDateSInterval);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.Curve[]>> GetCurvesBySitesAsync(long hSvc, int[] sitesId, int variableIdX, int variableIdY, System.DateTime[] seriaDateSInterval) {
            return base.Channel.GetCurvesBySitesAsync(hSvc, sitesId, variableIdX, variableIdY, seriaDateSInterval);
        }
        
        public Import.AmurServiceReference.Curve GetCurveByCatalog(long hSvc, int catalog_id_x, int catalog_id_y, System.DateTime[] seriaDateSInterval) {
            return base.Channel.GetCurveByCatalog(hSvc, catalog_id_x, catalog_id_y, seriaDateSInterval);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Curve> GetCurveByCatalogAsync(long hSvc, int catalog_id_x, int catalog_id_y, System.DateTime[] seriaDateSInterval) {
            return base.Channel.GetCurveByCatalogAsync(hSvc, catalog_id_x, catalog_id_y, seriaDateSInterval);
        }
        
        public System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.DataForecast[]> GetDataForecastsByIdList(long hSvc, int[] catalogIds, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs) {
            return base.Channel.GetDataForecastsByIdList(hSvc, catalogIds, dateFcsS, dateFcsF, fcsLag, isDateFcs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, Import.AmurServiceReference.DataForecast[]>> GetDataForecastsByIdListAsync(long hSvc, int[] catalogIds, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs) {
            return base.Channel.GetDataForecastsByIdListAsync(hSvc, catalogIds, dateFcsS, dateFcsF, fcsLag, isDateFcs);
        }
        
        public System.Collections.Generic.Dictionary<long, Import.AmurServiceReference.DataSource> GetDataSources(long hSvc, long[] dataValueIds) {
            return base.Channel.GetDataSources(hSvc, dataValueIds);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<long, Import.AmurServiceReference.DataSource>> GetDataSourcesAsync(long hSvc, long[] dataValueIds) {
            return base.Channel.GetDataSourcesAsync(hSvc, dataValueIds);
        }
        
        public System.Collections.Generic.Dictionary<Import.AmurServiceReference.Catalog, Import.AmurServiceReference.DataValue[]> GetDataValues(long hSvc, System.DateTime dateS, System.DateTime dateF, bool isDateLOC, int[] siteId, int[] variableId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue, System.Nullable<byte> flagAQC, bool isActualValueOnly, bool isSelectDeleted) {
            return base.Channel.GetDataValues(hSvc, dateS, dateF, isDateLOC, siteId, variableId, methodId, sourceId, offsetTypeId, offsetValue, flagAQC, isActualValueOnly, isSelectDeleted);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<Import.AmurServiceReference.Catalog, Import.AmurServiceReference.DataValue[]>> GetDataValuesAsync(long hSvc, System.DateTime dateS, System.DateTime dateF, bool isDateLOC, int[] siteId, int[] variableId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue, System.Nullable<byte> flagAQC, bool isActualValueOnly, bool isSelectDeleted) {
            return base.Channel.GetDataValuesAsync(hSvc, dateS, dateF, isDateLOC, siteId, variableId, methodId, sourceId, offsetTypeId, offsetValue, flagAQC, isActualValueOnly, isSelectDeleted);
        }
        
        public Import.AmurServiceReference.DataForecast[] GetDataForecasts(long hSvc, int catalogId, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs) {
            return base.Channel.GetDataForecasts(hSvc, catalogId, dateFcsS, dateFcsF, fcsLag, isDateFcs);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.DataForecast[]> GetDataForecastsAsync(long hSvc, int catalogId, System.DateTime dateFcsS, System.DateTime dateFcsF, System.Nullable<double> fcsLag, bool isDateFcs) {
            return base.Channel.GetDataForecastsAsync(hSvc, catalogId, dateFcsS, dateFcsF, fcsLag, isDateFcs);
        }
        
        public Import.AmurServiceReference.Catalog[] GetCatalogListById(long hSvc, int[] ctlId) {
            return base.Channel.GetCatalogListById(hSvc, ctlId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog[]> GetCatalogListByIdAsync(long hSvc, int[] ctlId) {
            return base.Channel.GetCatalogListByIdAsync(hSvc, ctlId);
        }
        
        public Import.AmurServiceReference.Catalog[] GetCatalogList(long hSvc, int[] siteId, int[] varId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue) {
            return base.Channel.GetCatalogList(hSvc, siteId, varId, methodId, sourceId, offsetTypeId, offsetValue);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog[]> GetCatalogListAsync(long hSvc, int[] siteId, int[] varId, int[] methodId, int[] sourceId, int[] offsetTypeId, double[] offsetValue) {
            return base.Channel.GetCatalogListAsync(hSvc, siteId, varId, methodId, sourceId, offsetTypeId, offsetValue);
        }
        
        public Import.AmurServiceReference.Catalog GetCatalog(long hSvc, int siteId, int varId, int offsetTypeId, int methodId, int sourceId, double offsetValue) {
            return base.Channel.GetCatalog(hSvc, siteId, varId, offsetTypeId, methodId, sourceId, offsetValue);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog> GetCatalogAsync(long hSvc, int siteId, int varId, int offsetTypeId, int methodId, int sourceId, double offsetValue) {
            return base.Channel.GetCatalogAsync(hSvc, siteId, varId, offsetTypeId, methodId, sourceId, offsetValue);
        }
        
        public Import.AmurServiceReference.AQCDataValue[] GetDataPDataValueAQC(long hSvc, long dvId) {
            return base.Channel.GetDataPDataValueAQC(hSvc, dvId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.AQCDataValue[]> GetDataPDataValueAQCAsync(long hSvc, long dvId) {
            return base.Channel.GetDataPDataValueAQCAsync(hSvc, dvId);
        }
        
        public Import.AmurServiceReference.SysObj GetParserSysObj(long hSvc, int sysObjId) {
            return base.Channel.GetParserSysObj(hSvc, sysObjId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SysObj> GetParserSysObjAsync(long hSvc, int sysObjId) {
            return base.Channel.GetParserSysObjAsync(hSvc, sysObjId);
        }
        
        public Import.AmurServiceReference.SysParsersXSites[] GetParserSysParsersXSites(long hSvc, int sysObjId) {
            return base.Channel.GetParserSysParsersXSites(hSvc, sysObjId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SysParsersXSites[]> GetParserSysParsersXSitesAsync(long hSvc, int sysObjId) {
            return base.Channel.GetParserSysParsersXSitesAsync(hSvc, sysObjId);
        }
        
        public Import.AmurServiceReference.SysParsersParams[] GetParserSysParsersParams(long hSvc, int[] sysParsersParamsSetIds) {
            return base.Channel.GetParserSysParsersParams(hSvc, sysParsersParamsSetIds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.SysParsersParams[]> GetParserSysParsersParamsAsync(long hSvc, int[] sysParsersParamsSetIds) {
            return base.Channel.GetParserSysParsersParamsAsync(hSvc, sysParsersParamsSetIds);
        }
        
        public Import.AmurServiceReference.Org GetOrg(long hSvc, int orgId) {
            return base.Channel.GetOrg(hSvc, orgId);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Org> GetOrgAsync(long hSvc, int orgId) {
            return base.Channel.GetOrgAsync(hSvc, orgId);
        }
        
        public Import.AmurServiceReference.Org[] GetOrgsById(long hSvc, int[] orgIds) {
            return base.Channel.GetOrgsById(hSvc, orgIds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Org[]> GetOrgsByIdAsync(long hSvc, int[] orgIds) {
            return base.Channel.GetOrgsByIdAsync(hSvc, orgIds);
        }
        
        public Import.AmurServiceReference.Org[] GetOrgsAll(long hSvc) {
            return base.Channel.GetOrgsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Org[]> GetOrgsAllAsync(long hSvc) {
            return base.Channel.GetOrgsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.Person GetPerson(long hSvc, int personIds) {
            return base.Channel.GetPerson(hSvc, personIds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Person> GetPersonAsync(long hSvc, int personIds) {
            return base.Channel.GetPersonAsync(hSvc, personIds);
        }
        
        public Import.AmurServiceReference.Person[] GetPersonsById(long hSvc, int[] personIds) {
            return base.Channel.GetPersonsById(hSvc, personIds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Person[]> GetPersonsByIdAsync(long hSvc, int[] personIds) {
            return base.Channel.GetPersonsByIdAsync(hSvc, personIds);
        }
        
        public Import.AmurServiceReference.Person[] GetPersonsAll(long hSvc) {
            return base.Channel.GetPersonsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Person[]> GetPersonsAllAsync(long hSvc) {
            return base.Channel.GetPersonsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.Addr[] GetAddrs(long hSvc, int[] parentAddrRegionsId, bool isWithChilds) {
            return base.Channel.GetAddrs(hSvc, parentAddrRegionsId, isWithChilds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Addr[]> GetAddrsAsync(long hSvc, int[] parentAddrRegionsId, bool isWithChilds) {
            return base.Channel.GetAddrsAsync(hSvc, parentAddrRegionsId, isWithChilds);
        }
        
        public Import.AmurServiceReference.Addr[] GetAddrsAll(long hSvc) {
            return base.Channel.GetAddrsAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Addr[]> GetAddrsAllAsync(long hSvc) {
            return base.Channel.GetAddrsAllAsync(hSvc);
        }
        
        public Import.AmurServiceReference.LegalEntity GetLegalEntity(long hSvc, int leIds) {
            return base.Channel.GetLegalEntity(hSvc, leIds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.LegalEntity> GetLegalEntityAsync(long hSvc, int leIds) {
            return base.Channel.GetLegalEntityAsync(hSvc, leIds);
        }
        
        public Import.AmurServiceReference.LegalEntity[] GetLegalEntityesById(long hSvc, int[] leIds) {
            return base.Channel.GetLegalEntityesById(hSvc, leIds);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.LegalEntity[]> GetLegalEntityesByIdAsync(long hSvc, int[] leIds) {
            return base.Channel.GetLegalEntityesByIdAsync(hSvc, leIds);
        }
        
        public Import.AmurServiceReference.LegalEntity[] GetLegalEntityesAll(long hSvc) {
            return base.Channel.GetLegalEntityesAll(hSvc);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.LegalEntity[]> GetLegalEntityesAllAsync(long hSvc) {
            return base.Channel.GetLegalEntityesAllAsync(hSvc);
        }
        
        public void SaveVariableCode(long hSvc, Import.AmurServiceReference.VariableCode vc) {
            base.Channel.SaveVariableCode(hSvc, vc);
        }
        
        public System.Threading.Tasks.Task SaveVariableCodeAsync(long hSvc, Import.AmurServiceReference.VariableCode vc) {
            return base.Channel.SaveVariableCodeAsync(hSvc, vc);
        }
        
        public void UpdateStation(long hSvc, Import.AmurServiceReference.Station station) {
            base.Channel.UpdateStation(hSvc, station);
        }
        
        public System.Threading.Tasks.Task UpdateStationAsync(long hSvc, Import.AmurServiceReference.Station station) {
            return base.Channel.UpdateStationAsync(hSvc, station);
        }
        
        public void SaveSiteAttribute(long hSvc, Import.AmurServiceReference.EntityAttrValue eav) {
            base.Channel.SaveSiteAttribute(hSvc, eav);
        }
        
        public System.Threading.Tasks.Task SaveSiteAttributeAsync(long hSvc, Import.AmurServiceReference.EntityAttrValue eav) {
            return base.Channel.SaveSiteAttributeAsync(hSvc, eav);
        }
        
        public int SaveSite(long hSvc, Import.AmurServiceReference.Site site) {
            return base.Channel.SaveSite(hSvc, site);
        }
        
        public System.Threading.Tasks.Task<int> SaveSiteAsync(long hSvc, Import.AmurServiceReference.Site site) {
            return base.Channel.SaveSiteAsync(hSvc, site);
        }
        
        public int SaveStation(long hSvc, Import.AmurServiceReference.Station station) {
            return base.Channel.SaveStation(hSvc, station);
        }
        
        public System.Threading.Tasks.Task<int> SaveStationAsync(long hSvc, Import.AmurServiceReference.Station station) {
            return base.Channel.SaveStationAsync(hSvc, station);
        }
        
        public Import.AmurServiceReference.Catalog SaveCatalog(long hSvc, Import.AmurServiceReference.Catalog catalog) {
            return base.Channel.SaveCatalog(hSvc, catalog);
        }
        
        public System.Threading.Tasks.Task<Import.AmurServiceReference.Catalog> SaveCatalogAsync(long hSvc, Import.AmurServiceReference.Catalog catalog) {
            return base.Channel.SaveCatalogAsync(hSvc, catalog);
        }
        
        public void UpdateCurveSeria(long hSvc, int seriaId, System.DateTime dateS, string description, Import.AmurServiceReference.Curve.Seria.Point[] points, Import.AmurServiceReference.Curve.Seria.Coef[] coefs) {
            base.Channel.UpdateCurveSeria(hSvc, seriaId, dateS, description, points, coefs);
        }
        
        public System.Threading.Tasks.Task UpdateCurveSeriaAsync(long hSvc, int seriaId, System.DateTime dateS, string description, Import.AmurServiceReference.Curve.Seria.Point[] points, Import.AmurServiceReference.Curve.Seria.Coef[] coefs) {
            return base.Channel.UpdateCurveSeriaAsync(hSvc, seriaId, dateS, description, points, coefs);
        }
        
        public void SaveCurveSeries(long hSvc, Import.AmurServiceReference.Curve.Seria[] series) {
            base.Channel.SaveCurveSeries(hSvc, series);
        }
        
        public System.Threading.Tasks.Task SaveCurveSeriesAsync(long hSvc, Import.AmurServiceReference.Curve.Seria[] series) {
            return base.Channel.SaveCurveSeriesAsync(hSvc, series);
        }
        
        public int SaveCurve(long hSvc, Import.AmurServiceReference.Curve curve) {
            return base.Channel.SaveCurve(hSvc, curve);
        }
        
        public System.Threading.Tasks.Task<int> SaveCurveAsync(long hSvc, Import.AmurServiceReference.Curve curve) {
            return base.Channel.SaveCurveAsync(hSvc, curve);
        }
        
        public void ActualizeDataValue(long hSvc, long dataValueId) {
            base.Channel.ActualizeDataValue(hSvc, dataValueId);
        }
        
        public System.Threading.Tasks.Task ActualizeDataValueAsync(long hSvc, long dataValueId) {
            return base.Channel.ActualizeDataValueAsync(hSvc, dataValueId);
        }
        
        public long SaveValue(long hSvc, int catalogId, System.DateTime dateUTC, System.DateTime dateLOC, double value, byte flagAQC, System.Nullable<long> dataSourceId) {
            return base.Channel.SaveValue(hSvc, catalogId, dateUTC, dateLOC, value, flagAQC, dataSourceId);
        }
        
        public System.Threading.Tasks.Task<long> SaveValueAsync(long hSvc, int catalogId, System.DateTime dateUTC, System.DateTime dateLOC, double value, byte flagAQC, System.Nullable<long> dataSourceId) {
            return base.Channel.SaveValueAsync(hSvc, catalogId, dateUTC, dateLOC, value, flagAQC, dataSourceId);
        }
        
        public long SaveDataValue(long hSvc, Import.AmurServiceReference.DataValue dv) {
            return base.Channel.SaveDataValue(hSvc, dv);
        }
        
        public System.Threading.Tasks.Task<long> SaveDataValueAsync(long hSvc, Import.AmurServiceReference.DataValue dv) {
            return base.Channel.SaveDataValueAsync(hSvc, dv);
        }
        
        public void SaveDataValueXSource(long hSvc, int dataValueId, long dataSourceId) {
            base.Channel.SaveDataValueXSource(hSvc, dataValueId, dataSourceId);
        }
        
        public System.Threading.Tasks.Task SaveDataValueXSourceAsync(long hSvc, int dataValueId, long dataSourceId) {
            return base.Channel.SaveDataValueXSourceAsync(hSvc, dataValueId, dataSourceId);
        }
        
        public long SaveDataSource(long hSvc, Import.AmurServiceReference.DataSource dataSource) {
            return base.Channel.SaveDataSource(hSvc, dataSource);
        }
        
        public System.Threading.Tasks.Task<long> SaveDataSourceAsync(long hSvc, Import.AmurServiceReference.DataSource dataSource) {
            return base.Channel.SaveDataSourceAsync(hSvc, dataSource);
        }
        
        public void SaveDataValueList(long hSvc, Import.AmurServiceReference.DataValue[] dvs, System.Nullable<long> dataSourceId) {
            base.Channel.SaveDataValueList(hSvc, dvs, dataSourceId);
        }
        
        public System.Threading.Tasks.Task SaveDataValueListAsync(long hSvc, Import.AmurServiceReference.DataValue[] dvs, System.Nullable<long> dataSourceId) {
            return base.Channel.SaveDataValueListAsync(hSvc, dvs, dataSourceId);
        }
        
        public void SaveDataForecastList(long hSvc, Import.AmurServiceReference.DataForecast[] dvs) {
            base.Channel.SaveDataForecastList(hSvc, dvs);
        }
        
        public System.Threading.Tasks.Task SaveDataForecastListAsync(long hSvc, Import.AmurServiceReference.DataForecast[] dvs) {
            return base.Channel.SaveDataForecastListAsync(hSvc, dvs);
        }
        
        public void SaveDataPRole(long hSvc, long dvId, int roleId, bool isAQCApplied) {
            base.Channel.SaveDataPRole(hSvc, dvId, roleId, isAQCApplied);
        }
        
        public System.Threading.Tasks.Task SaveDataPRoleAsync(long hSvc, long dvId, int roleId, bool isAQCApplied) {
            return base.Channel.SaveDataPRoleAsync(hSvc, dvId, roleId, isAQCApplied);
        }
        
        public void SaveParserSysObjLastStartParam(long hSvc, int sysObjId, string lastStartParam) {
            base.Channel.SaveParserSysObjLastStartParam(hSvc, sysObjId, lastStartParam);
        }
        
        public System.Threading.Tasks.Task SaveParserSysObjLastStartParamAsync(long hSvc, int sysObjId, string lastStartParam) {
            return base.Channel.SaveParserSysObjLastStartParamAsync(hSvc, sysObjId, lastStartParam);
        }
    }
}
