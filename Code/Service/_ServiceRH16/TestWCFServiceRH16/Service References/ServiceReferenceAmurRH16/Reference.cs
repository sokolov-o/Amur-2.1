//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestWCFServiceRH16.ServiceReferenceAmurRH16 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Station", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.ServiceRH16")]
    [System.SerializableAttribute()]
    public partial class Station : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Variable", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.ServiceRH16")]
    [System.SerializableAttribute()]
    public partial class Variable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataValue", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.ServiceRH16")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast))]
    public partial class DataValue : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VariableIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationId {
            get {
                return this.StationIdField;
            }
            set {
                if ((this.StationIdField.Equals(value) != true)) {
                    this.StationIdField = value;
                    this.RaisePropertyChanged("StationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VariableId {
            get {
                return this.VariableIdField;
            }
            set {
                if ((this.VariableIdField.Equals(value) != true)) {
                    this.VariableIdField = value;
                    this.RaisePropertyChanged("VariableId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataForecast", Namespace="http://schemas.datacontract.org/2004/07/FERHRI.Amur.ServiceRH16")]
    [System.SerializableAttribute()]
    public partial class DataForecast : TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaxLagFcsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MinLagFcsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxLagFcs {
            get {
                return this.MaxLagFcsField;
            }
            set {
                if ((this.MaxLagFcsField.Equals(value) != true)) {
                    this.MaxLagFcsField = value;
                    this.RaisePropertyChanged("MaxLagFcs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MinLagFcs {
            get {
                return this.MinLagFcsField;
            }
            set {
                if ((this.MinLagFcsField.Equals(value) != true)) {
                    this.MinLagFcsField = value;
                    this.RaisePropertyChanged("MinLagFcs");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceAmurRH16.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Open", ReplyAction="http://tempuri.org/IService/OpenResponse")]
        long Open(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Open", ReplyAction="http://tempuri.org/IService/OpenResponse")]
        System.Threading.Tasks.Task<long> OpenAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Close", ReplyAction="http://tempuri.org/IService/CloseResponse")]
        void Close(int hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Close", ReplyAction="http://tempuri.org/IService/CloseResponse")]
        System.Threading.Tasks.Task CloseAsync(int hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableTimePeriod", ReplyAction="http://tempuri.org/IService/GetAvailableTimePeriodResponse")]
        System.Collections.Generic.List<System.DateTime> GetAvailableTimePeriod(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableTimePeriod", ReplyAction="http://tempuri.org/IService/GetAvailableTimePeriodResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<System.DateTime>> GetAvailableTimePeriodAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableStations", ReplyAction="http://tempuri.org/IService/GetAvailableStationsResponse")]
        System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Station> GetAvailableStations(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableStations", ReplyAction="http://tempuri.org/IService/GetAvailableStationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Station>> GetAvailableStationsAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableVariables", ReplyAction="http://tempuri.org/IService/GetAvailableVariablesResponse")]
        System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Variable> GetAvailableVariables(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAvailableVariables", ReplyAction="http://tempuri.org/IService/GetAvailableVariablesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Variable>> GetAvailableVariablesAsync(long hSvc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataObservation", ReplyAction="http://tempuri.org/IService/GetDataObservationResponse")]
        TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue GetDataObservation(long hSvc, int stationId, int variableId, System.DateTime dateDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataObservation", ReplyAction="http://tempuri.org/IService/GetDataObservationResponse")]
        System.Threading.Tasks.Task<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue> GetDataObservationAsync(long hSvc, int stationId, int variableId, System.DateTime dateDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataObservations", ReplyAction="http://tempuri.org/IService/GetDataObservationsResponse")]
        System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue> GetDataObservations(long hSvc, System.Collections.Generic.List<int> stationId, int variableId, System.DateTime dateDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataObservations", ReplyAction="http://tempuri.org/IService/GetDataObservationsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue>> GetDataObservationsAsync(long hSvc, System.Collections.Generic.List<int> stationId, int variableId, System.DateTime dateDay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecast", ReplyAction="http://tempuri.org/IService/GetDataForecastResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>> GetDataForecast(long hSvc, int stationId, int variableId, System.DateTime dateDayFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecast", ReplyAction="http://tempuri.org/IService/GetDataForecastResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>>> GetDataForecastAsync(long hSvc, int stationId, int variableId, System.DateTime dateDayFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecasts", ReplyAction="http://tempuri.org/IService/GetDataForecastsResponse")]
        System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>> GetDataForecasts(long hSvc, System.Collections.Generic.List<int> stationsId, int variableId, System.DateTime dateDayFcs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetDataForecasts", ReplyAction="http://tempuri.org/IService/GetDataForecastsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>>> GetDataForecastsAsync(long hSvc, System.Collections.Generic.List<int> stationsId, int variableId, System.DateTime dateDayFcs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TestWCFServiceRH16.ServiceReferenceAmurRH16.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TestWCFServiceRH16.ServiceReferenceAmurRH16.IService>, TestWCFServiceRH16.ServiceReferenceAmurRH16.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long Open(string userName, string password) {
            return base.Channel.Open(userName, password);
        }
        
        public System.Threading.Tasks.Task<long> OpenAsync(string userName, string password) {
            return base.Channel.OpenAsync(userName, password);
        }
        
        public void Close(int hSvc) {
            base.Channel.Close(hSvc);
        }
        
        public System.Threading.Tasks.Task CloseAsync(int hSvc) {
            return base.Channel.CloseAsync(hSvc);
        }
        
        public System.Collections.Generic.List<System.DateTime> GetAvailableTimePeriod(long hSvc) {
            return base.Channel.GetAvailableTimePeriod(hSvc);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<System.DateTime>> GetAvailableTimePeriodAsync(long hSvc) {
            return base.Channel.GetAvailableTimePeriodAsync(hSvc);
        }
        
        public System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Station> GetAvailableStations(long hSvc) {
            return base.Channel.GetAvailableStations(hSvc);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Station>> GetAvailableStationsAsync(long hSvc) {
            return base.Channel.GetAvailableStationsAsync(hSvc);
        }
        
        public System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Variable> GetAvailableVariables(long hSvc) {
            return base.Channel.GetAvailableVariables(hSvc);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.Variable>> GetAvailableVariablesAsync(long hSvc) {
            return base.Channel.GetAvailableVariablesAsync(hSvc);
        }
        
        public TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue GetDataObservation(long hSvc, int stationId, int variableId, System.DateTime dateDay) {
            return base.Channel.GetDataObservation(hSvc, stationId, variableId, dateDay);
        }
        
        public System.Threading.Tasks.Task<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue> GetDataObservationAsync(long hSvc, int stationId, int variableId, System.DateTime dateDay) {
            return base.Channel.GetDataObservationAsync(hSvc, stationId, variableId, dateDay);
        }
        
        public System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue> GetDataObservations(long hSvc, System.Collections.Generic.List<int> stationId, int variableId, System.DateTime dateDay) {
            return base.Channel.GetDataObservations(hSvc, stationId, variableId, dateDay);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataValue>> GetDataObservationsAsync(long hSvc, System.Collections.Generic.List<int> stationId, int variableId, System.DateTime dateDay) {
            return base.Channel.GetDataObservationsAsync(hSvc, stationId, variableId, dateDay);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>> GetDataForecast(long hSvc, int stationId, int variableId, System.DateTime dateDayFcs) {
            return base.Channel.GetDataForecast(hSvc, stationId, variableId, dateDayFcs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>>> GetDataForecastAsync(long hSvc, int stationId, int variableId, System.DateTime dateDayFcs) {
            return base.Channel.GetDataForecastAsync(hSvc, stationId, variableId, dateDayFcs);
        }
        
        public System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>> GetDataForecasts(long hSvc, System.Collections.Generic.List<int> stationsId, int variableId, System.DateTime dateDayFcs) {
            return base.Channel.GetDataForecasts(hSvc, stationsId, variableId, dateDayFcs);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<System.DateTime, System.Collections.Generic.List<TestWCFServiceRH16.ServiceReferenceAmurRH16.DataForecast>>> GetDataForecastsAsync(long hSvc, System.Collections.Generic.List<int> stationsId, int variableId, System.DateTime dateDayFcs) {
            return base.Channel.GetDataForecastsAsync(hSvc, stationsId, variableId, dateDayFcs);
        }
    }
}
